{
	"name": "aura-helper",
	"publisher": "Kanko",
	"displayName": "Aura Helper",
	"description": "Extension to work with Salesforce, Apex and Lightning. It contains numerous tools to increase productivity and facilitate code creation. Aura Helper is the most complete extensions for work with salesforce and is one of the necessary applications for Salaesforce developers.",
	"version": "2.0.0",
	"engines": {
		"vscode": "^1.46.0",
		"node": ">=12.0.0"
	},
	"icon": "resources/images/icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/JJLongoria/aura-helper"
	},
	"categories": [
		"Programming Languages",
		"Snippets",
		"Formatters",
		"Other",
		"Linters"
	],
	"keywords": [
		"aura",
		"aura helper",
		"helper",
		"lightning",
		"salesforce",
		"apex",
		"visualforce",
		"documentation",
		"javadoc",
		"apexdoc",
		"aura documentation",
		"auradoc",
		"profile",
		"profile management",
		"salesforce profile",
		"metadata management",
		"local metadata management",
		"graphic interface",
		"compress files",
		"git",
		"version control",
		"code completion",
		"completion",
		"autocomplete",
		"complete code",
		"gui",
		"ui",
		"metadata",
		"local metadata"
	],
	"activationEvents": [
		"workspaceContains:sfdx-project.json",
		"onCommand:aurahelper.completion.js.function",
		"onCommand:aurahelper.completion.documentation.method",
		"onCommand:aurahelper.template.apex.comment",
		"onCommand:aurahelper.template.aura.documentation",
		"onCommand:aurahelper.completion.aura.documentation",
		"onCommand:aurahelper.help",
		"onCommand:aurahelper.file.new.aura",
		"onCommand:aurahelper.metadata.refresh.index",
		"onCommand:aurahelper.metadata.refresh.object",
		"onCommand:aurahelper.metadata.compress.xml",
		"onCommand:aurahelper.metadata.compress.xml.all",
		"onCommand:aurahelper.metadata.permission.editor",
		"onCommand:aurahelper.metadata.retrieve.special",
		"onCommand:aurahelper.metadata.package.generate",
		"onCommand:aurahelper.metadata.org.compare",
		"onCommand:aurahelper.metadata.customlabels.editor",
		"onCommand:aurahelper.documentation.project.create",
		"onCommand:aurahelper.completion.apex.implement.interface",
		"onCommand:aurahelper.completion.apex.implement.extend"
	],
	"main": "./extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "fileStructure",
					"title": "Outline",
					"icon": "resources/images/code.svg"
				}
			]
		},
		"views": {
			"fileStructure": [
				{
					"id": "fileExplorer",
					"name": "Explorer"
				}
			]
		},
		"configuration": {
			"title": "Aura Helper",
			"properties": {
				"aurahelper.autoCompletion.activeAttributeSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for component attributes (v.)"
				},
				"aurahelper.autoCompletion.activeControllerFunctionsSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for JavaScript Controller Functions (c.)"
				},
				"aurahelper.autoCompletion.activeHelperFunctionsSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for JavaScript Helper Functions (helper.)"
				},
				"aurahelper.autoCompletion.activeControllerMethodsSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for Apex Controller Methods (c.) on javascript files"
				},
				"aurahelper.autoCompletion.activeComponentSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for show custom components"
				},
				"aurahelper.autoCompletion.activeComponentCallSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for show available attributes for standard components when are called"
				},
				"aurahelper.autoCompletion.activeCustomComponentCallSuggest": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for show available attributes for custom components when are called"
				},
				"aurahelper.autoCompletion.activeApexCommentSuggestion": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for create a method or class comment on Apex"
				},
				"aurahelper.autoCompletion.activeSObjectSuggestion": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for list all Sobjects on your org"
				},
				"aurahelper.autoCompletion.activeSobjectFieldsSuggestion": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for the fields of an SObject"
				},
				"aurahelper.autoCompletion.activeQuerySuggestion": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools on queries"
				},
				"aurahelper.autoCompletion.activeApexSuggestion": {
					"type": "boolean",
					"default": true,
					"description": "Use Code Suggestion and autocompletion tools for Apex Code (variables, fields, methods...)"
				},
				"aurahelper.graphicUserInterface.defaultGUILanguage": {
					"type": "string",
					"default": "English",
					"description": "Select the default language for the Aura Helper's Advance User Interface",
					"enum": [
						"English",
						"Spanish"
					],
					"enumDescriptions": [
						"Open English GUI by default",
						"Open Spanish GUI by default"
					]
				},
				"aurahelper.graphicUserInterface.enableAdvanceGUI": {
					"type": "boolean",
					"default": false,
					"description": "Enable the Advance Graphic User Interface"
				},
				"aurahelper.metadata.refreshSObjectDefinitionsOnStart": {
					"type": "boolean",
					"default": false,
					"description": "Refresh the Aura Helper's SObject Definitions when VSCode Start"
				},
				"aurahelper.metadata.useCustomAPIVersion": {
					"type": "boolean",
					"default": false,
					"description": "Aura Helper use the SFDX CLI Command Version as Salesforce API Version for download metadata from Org by default. Check this field for use custom API Version"
				},
				"aurahelper.metadata.CustomAPIVersion": {
					"type": "integer",
					"default": 0,
					"description": "Salesforce API Version for use if you select Use Custom API Version setting.",
					"minimum": 0
				},
				"aurahelper.metadata.mergeLocalDataPermissions": {
					"type": "boolean",
					"default": true,
					"description": "When you open profile for edit on Advance or Standard GUI, Aura Helper can merge your local data with your permissions files for add the metadata that not exists on the file for modify permissions"
				},
				"aurahelper.apexFormat.punctuation.maxBlankLines": {
					"type": "integer",
					"default": 2,
					"description": "Number of the maximum blank lines, -1 for keep the code blank lines",
					"minimum": -1
				},
				"aurahelper.apexFormat.punctuation.openCurlyBracketOnNewLine": {
					"type": "boolean",
					"default": false,
					"description": "Add the { symbol on a new line (Not affect to List, Set or Map explicit value declaration)."
				},
				"aurahelper.apexFormat.punctuation.addNewLineAfterCloseCurlyBracket": {
					"type": "boolean",
					"default": false,
					"description": "Add new line after { symbol. Only affects on flow control structures (if, else if, for, foreach, while, do...while, catch)."
				},
				"aurahelper.apexFormat.punctuation.addWhitespaceAfterCloseCurlyBracket": {
					"type": "boolean",
					"default": true,
					"description": "Add white space after { symbol if 'Add New Line After Close Curly Bracket' is set to false"
				},
				"aurahelper.apexFormat.punctuation.addWhitespaceBeforeOpenCurlyBracket": {
					"type": "boolean",
					"default": false,
					"description": "Add a white space before { symbol (Not affect to List, Set or Map explicit value declaration). Only apply if Open Curly Bracket On New Line is set to false"
				},
				"aurahelper.apexFormat.punctuation.addWhitespaceBeforeOpenGuardParenthesis": {
					"type": "boolean",
					"default": true,
					"description": "Add a white space before ( symbol for flow control structures (if, else if, for, foreach, while, do...while, catch)"
				},
				"aurahelper.apexFormat.punctuation.addWhitespaceAfterOpenGuardParenthesis": {
					"type": "boolean",
					"default": false,
					"description": "Add a white space after ( symbol for flow control structures (if, else if, for, foreach, while, do...while, catch)"
				},
				"aurahelper.apexFormat.punctuation.addWhitespaceBeforeCloseGuardParenthesis": {
					"type": "boolean",
					"default": false,
					"description": "Add a white space before ) symbol for flow structures (if, else if, for, foreach, while, do...while, catch)"
				},
				"aurahelper.apexFormat.punctuation.addWhiteSpaceAfterComma": {
					"type": "boolean",
					"default": true,
					"description": "Add a white space after , symbol"
				},
				"aurahelper.apexFormat.punctuation.addWhitespaceBeforeOpenTriggerEvents": {
					"type": "boolean",
					"default": true,
					"description": "Add a white space before ( symbol on trigger events declaration"
				},
				"aurahelper.apexFormat.operator.addWhitespaceBeforeOperator": {
					"type": "boolean",
					"default": true,
					"description": "Add a white space before any arithmetic, logic, assignment or bitwise operators"
				},
				"aurahelper.apexFormat.operator.addWhitespaceAfterOperator": {
					"type": "boolean",
					"default": true,
					"description": "Add a white space after any arithmetic, logic, assignment or bitwise operator"
				},
				"aurahelper.apexFormat.operator.addWhitespaceAfterOpenParenthesisOperator": {
					"type": "boolean",
					"default": false,
					"description": "Add a white space after ( priority operator"
				},
				"aurahelper.apexFormat.operator.addWhitespaceBeforeCloseParenthesisOperator": {
					"type": "boolean",
					"default": false,
					"description": "Add a white space before ) priority operator"
				},
				"aurahelper.apexFormat.classMembers.newLinesBetweenCodeBlockMembers": {
					"type": "integer",
					"default": 1,
					"description": "Add the specified new lines between method, enums, inner classes, properties or other code block declaration on classes and interfaces",
					"minimum": 0
				},
				"aurahelper.apexFormat.classMembers.newLinesBetweenGetterAndSetterAccessor": {
					"type": "integer",
					"default": 1,
					"description": "Add the specified new lines between getter and setter accessor on properties declaration",
					"minimum": 0
				},
				"aurahelper.apexFormat.classMembers.newLinesBetweenClassFields": {
					"type": "integer",
					"default": 0,
					"description": "Add the specified new lines between class fields or constants",
					"minimum": 0
				},
				"aurahelper.apexFormat.comment.holdBeforeWhitespacesOnLineComment": {
					"type": "boolean",
					"default": true,
					"description": "Keep the before whitespaces when start comments if not are on new line"
				},
				"aurahelper.apexFormat.comment.holdAfterWhitespacesOnLineComment": {
					"type": "boolean",
					"default": true,
					"description": "Keep the after whitespaces when end comments if have any code"
				},
				"aurahelper.apexFormat.comment.newLinesBewteenComments": {
					"type": "integer",
					"default": 0,
					"minimum": 0,
					"description": "New lines between comments when have more than one comment block followed. Only apply if the comments are in different lines previous format"
				},
				"aurahelper.apexFormat.query.oneClausePerLine": {
					"type": "boolean",
					"default": true,
					"description": "Set every query clause on a new line"
				},
				"aurahelper.apexFormat.query.oneProjectionFieldPerLine": {
					"type": "boolean",
					"default": false,
					"description": "Set every query clause on a new line"
				}
			}
		},
		"commands": [
			{
				"command": "aurahelper.completion.js.function",
				"title": "AuraHelper: Add Javascript Aura Function"
			},
			{
				"command": "aurahelper.completion.documentation.method",
				"title": "AuraHelper: Add Method Block to Aura Documentation"
			},
			{
				"command": "aurahelper.template.apex.comment",
				"title": "AuraHelper: Edit Apex Comment Template"
			},
			{
				"command": "aurahelper.template.aura.documentation",
				"title": "AuraHelper: Edit Aura Documentation Template"
			},
			{
				"command": "aurahelper.completion.aura.documentation",
				"title": "AuraHelper: Generate Aura Documentation"
			},
			{
				"command": "aurahelper.help",
				"title": "AuraHelper: Help"
			},
			{
				"command": "aurahelper.file.new.aura",
				"title": "AuraHelper: New Aura File"
			},
			{
				"command": "aurahelper.metadata.refresh.index",
				"title": "AuraHelper: Refresh All SObjects Definitions"
			},
			{
				"command": "aurahelper.metadata.refresh.object",
				"title": "AuraHelper: Refresh SObject Definition"
			},
			{
				"command": "aurahelper.fileExplorer.refresh",
				"title": "AuraHelper: Refresh File Structure View",
				"icon": {
					"light": "resources/images/light/refresh.svg",
					"dark": "resources/images/dark/refresh.svg"
				}
			},
			{
				"command": "aurahelper.fileExplorer.sort.default",
				"title": "AuraHelper: Sort File Structure by Default",
				"icon": {
					"light": "resources/images/SortByType_16x.svg",
					"dark": "resources/images/SortByType_16x.svg"
				}
			},
			{
				"command": "aurahelper.fileExplorer.sort.name.asc",
				"title": "AuraHelper: Sort File Structure by Name ASC",
				"icon": {
					"light": "resources/images/SortAscendingFilter_16x.svg",
					"dark": "resources/images/SortAscendingFilter_16x.svg"
				}
			},
			{
				"command": "aurahelper.fileExplorer.sort.name.desc",
				"title": "AuraHelper: Sort File Structure by Name DESC",
				"icon": {
					"light": "resources/images/SortDescendingFilter_16x.svg",
					"dark": "resources/images/SortDescendingFilter_16x.svg"
				}
			},
			{
				"command": "aurahelper.metadata.compress.xml",
				"title": "AuraHelper: Compress XML File"
			},
			{
				"command": "aurahelper.metadata.compress.xml.all",
				"title": "AuraHelper: Compress ALL XML Files"
			},
			{
				"command": "aurahelper.metadata.permission.editor",
				"title": "AuraHelper: Permission Editor"
			},
			{
				"command": "aurahelper.metadata.retrieve.special",
				"title": "AuraHelper: Retrieve Special Types"
			},
			{
				"command": "aurahelper.metadata.package.generate",
				"title": "AuraHelper: Package Generator"
			},
			{
				"command": "aurahelper.metadata.org.compare",
				"title": "AuraHelper: Compare Org With Local"
			},
			{
				"command": "aurahelper.metadata.customlabels.editor",
				"title": "AuraHelper: Custom Labels Editor"
			},
			{
				"command": "aurahelper.metadata.project.repair",
				"title": "AuraHelper: Repair Project Dependencies"
			},
			{
				"command": "aurahelper.documentation.project.create",
				"title": "AuraHelper: Create Project Documentation"
			},
			{
				"command": "aurahelper.completion.apex.implement.interface",
				"title": "AuraHelper: Implement Interfaces"
			},
			{
				"command": "aurahelper.completion.apex.implement.extend",
				"title": "AuraHelper: Implement Extended Methods"
			},
			{
				"command": "aurahelper.output.problems.clear",
				"title": "AuraHelper: Clear Problems Panel"
			}
		],
		"languages": [
			{
				"id": "apex",
				"extensions": [
					".apex",
					".cls",
					".trigger"
				],
				"aliases": [
					"Apex"
				]
			},
			{
				"id": "html",
				"extensions": [
					".auradoc",
					".cmp"
				],
				"aliases": [
					"HTML"
				]
			},
			{
				"id": "javascript",
				"extensions": [
					".js"
				],
				"aliases": [
					"JavaScript"
				]
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "resourceExtname == .cmp",
					"command": "aurahelper.file.new.aura",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./aura/ && resourceExtname =~ /^(?!(.app|.cmp|.auradoc|.evt|.intf|.css|.design|.html|.js|.svg)$)/",
					"command": "aurahelper.file.new.aura",
					"group": "auraHelper@1"
				},
				{
					"when": "resourceExtname == .auradoc",
					"command": "aurahelper.completion.aura.documentation",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./force-app/",
					"command": "aurahelper.metadata.compress.xml.all",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./force-app/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.compress.xml",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./profiles/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.permission.editor",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./permissionsets/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.permission.editor",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./labels/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.customlabels.editor",
					"group": "auraHelper@1"
				}
			],
			"editor/context": [
				{
					"when": "resourceExtname == .cmp",
					"command": "aurahelper.file.new.aura",
					"group": "auraHelper@1"
				},
				{
					"when": "resourceExtname == .auradoc",
					"command": "aurahelper.completion.aura.documentation",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./force-app/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.compress.xml",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./profiles/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.permission.editor",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./labels/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.customlabels.editor",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./permissionsets/ && resourceExtname == .xml",
					"command": "aurahelper.metadata.permission.editor",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./classes/ && resourceExtname == .cls",
					"command": "aurahelper.completion.apex.implement.interface",
					"group": "auraHelper@1"
				},
				{
					"when": "resource =~ /./classes/ && resourceExtname == .cls",
					"command": "aurahelper.completion.apex.implement.extend",
					"group": "auraHelper@1"
				}
			],
			"view/title": [
				{
					"command": "aurahelper.fileExplorer.refresh",
					"when": "view == fileExplorer",
					"group": "navigation"
				},
				{
					"command": "aurahelper.fileExplorer.sort.default",
					"when": "view == fileExplorer",
					"group": "navigation"
				},
				{
					"command": "aurahelper.fileExplorer.sort.name.asc",
					"when": "view == fileExplorer",
					"group": "navigation"
				},
				{
					"command": "aurahelper.fileExplorer.sort.name.desc",
					"when": "view == fileExplorer",
					"group": "navigation"
				}
			]
		}
	},
	"scripts": {
		"test": "node ./test/runTest.js"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"bugs": {
		"url": "https://github.com/JJLongoria/aura-helper/issues",
		"email": "juanjoselongoria@gmail.com"
	},
	"dependencies": {
		"fast-xml-parser": "^3.17.4",
		"he": "1.2.0"
	},
	"devDependencies": {
		"@types/glob": "^7.1.2",
		"@types/mocha": "^5.2.6",
		"@types/node": "^12.12.47",
		"@types/vscode": "^1.46.0",
		"eslint": "^5.13.0",
		"glob": "^7.1.6",
		"mocha": "^6.2.3",
		"sqlite3": "^4.2.0",
		"typescript": "^3.9.6",
		"vscode-test": "^1.4.0"
	},
	"extensionDependencies": [
		"salesforce.salesforcedx-vscode"
	]
}
