{
  "name": "AuthProviderPlugin",
  "namespace": "Auth",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": true,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getCustomMetadataType",
      "signature": "public String getCustomMetadataType()",
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getUserInfo",
      "signature": "public Auth.UserData getUserInfo(Map<String,String> authProviderConfiguration, Auth.AuthProviderTokenResponse response)",
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": [
        {
          "name": "response",
          "datatype": "Auth.AuthProviderTokenResponse",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup.  The OAuth access token, OAuth secret or refresh token, and state provided by the authentication provider to authenticate the current user."
        }
      ],
      "datatype": "Auth.UserData"
    },
    {
      "name": "handleCallback",
      "signature": "public Auth.AuthProviderTokenResponse handleCallback(Map<String,String> authProviderConfiguration, Auth.AuthProviderCallbackState callbackState)",
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": [
        {
          "name": "callbackState",
          "datatype": "Auth.AuthProviderCallbackState",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The class that contains the HTTP headers, body, and queryParams of the authentication request."
        }
      ],
      "datatype": "Auth.AuthProviderTokenResponse"
    },
    {
      "name": "initiate",
      "signature": "public System.PageReference initiate(Map<String,String> authProviderConfiguration, String stateToPropagate)",
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": [
        {
          "name": "stateToPropagate",
          "datatype": "String",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The state passed in to initiate the authentication request for the user."
        }
      ],
      "datatype": "System.PageReference"
    }
  ],
  "description": "This interface is deprecated. For new development, use the abstract class Auth.AuthProviderPluginClass to create a custom OAuth-based authentication provider plug-in for single sign-on in to Salesforce.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_interface_Auth_AuthProviderPlugin.htm"
}