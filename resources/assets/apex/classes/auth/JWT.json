{
  "name": "JWT",
  "namespace": "Auth",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "clone",
      "signature": "public Object clone()",
      "description": "Makes a duplicate copy of the JWT object.",
      "params": [],
      "datatype": "JWT"
    },
    {
      "name": "getAdditionalClaims",
      "signature": "public Map<String,ANY> getAdditionalClaims()",
      "description": "Returns a map of additional claims in the JWT, where the key string contains the name of the claim, and the value contains the value of the claim.",
      "params": [],
      "datatype": "Map<String,ANY>"
    },
    {
      "name": "getAud",
      "signature": "public String getAud()",
      "description": "Returns the audience claim that identifies the intended recipients of the JWT.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getIss",
      "signature": "public String getIss()",
      "description": "Returns the issuer claim that identifies the issuer of the JWT.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getNbfClockSkew",
      "signature": "public Integer getNbfClockSkew()",
      "description": "Returns the not before claim that identifies the time before which the JWT must not be accepted for processing, while allowing some leeway for clock skew.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "getSub",
      "signature": "public String getSub()",
      "description": "Returns the subject claim that identifies the current user of the JWT.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getValidityLength",
      "signature": "public Integer getValidityLength()",
      "description": "Returns the length of time that the JWT is valid, which affects the expiration claim.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "setAdditionalClaims",
      "signature": "public void setAdditionalClaims(Map<String,ANY> additionalClaims)",
      "description": "Sets the additional claims in the JWT. Returned by the getAdditionalClaims() method.",
      "params": [
        {
          "name": "additionalClaims",
          "datatype": "Map<String,ANY>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setAud",
      "signature": "public void setAud(String aud)",
      "description": "Sets the audience claim in the JWT. Returned by the getAud() method.",
      "params": [
        {
          "name": "aud",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setIss",
      "signature": "public void setIss(String iss)",
      "description": "Sets the issuer claim in the JWT. Returned by the getIss() method.",
      "params": [
        {
          "name": "iss",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setNbfClockSkew",
      "signature": "public void setNbfClockSkew(Integer nbfClockSkew)",
      "description": "Sets the not before claim in the JWT. Returned by the getNbfClockSkew() method.",
      "params": [
        {
          "name": "nbfClockSkew",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setSub",
      "signature": "public void setSub(String sub)",
      "description": "Sets the subject claim in the JWT. Returned by the getSub() method.",
      "params": [
        {
          "name": "sub",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setValidityLength",
      "signature": "public void setValidityLength(Integer validityLength)",
      "description": "Sets the length of time that the JWT is valid, which affects the expiration claim. Returned by the getValidityLength() method.",
      "params": [
        {
          "name": "validityLength",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "toJSONString",
      "signature": "public String toJSONString()",
      "description": "Generates the JSON object representation of the Claims Set as an encoded JWT payload.",
      "params": [],
      "datatype": "String"
    }
  ],
  "description": "Generates the JSON Claims Set in a JSON Web Token (JWT). The resulting Base64-encoded payload can be passed as an argument to create an instance of the Auth.JWS class.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_JWT.htm"
}