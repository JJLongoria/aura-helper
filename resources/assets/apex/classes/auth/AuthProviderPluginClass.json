{
  "name": "AuthProviderPluginClass",
  "namespace": "Auth",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getCustomMetadataType",
      "signature": "public String getCustomMetadataType()",
      "description": "Returns the custom metadata type API name for a custom OAuth-based authentication provider for single sign-on to Salesforce.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getUserInfo",
      "signature": "public Auth.UserData getUserInfo(Map<String,String> authProviderConfiguration, Auth.AuthProviderTokenResponse response)",
      "description": "Returns information from the custom authentication provider about the current user. This information is used by the registration handler and in other authentication provider flows.",
      "params": [
        {
          "name": "response",
          "datatype": "Auth.AuthProviderTokenResponse",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates it with the custom metadata type default values. Or you can set the configuration with values that you enter when you create the custom provider in Auth. Providers in Setup.  The OAuth access token, OAuth secret or refresh token, and state provided by the authentication provider to authenticate the current user."
        }
      ],
      "datatype": "Auth.UserData"
    },
    {
      "name": "handleCallback",
      "signature": "public Auth.AuthProviderTokenResponse handleCallback(Map<String,String> authProviderConfiguration, Auth.AuthProviderCallbackState callbackState)",
      "description": "Uses the authentication provider’s supported authentication protocol to return an OAuth access token, OAuth secret or refresh token, and the state passed in when the request for the current user was initiated.",
      "params": [
        {
          "name": "callbackState",
          "datatype": "Auth.AuthProviderCallbackState",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The class that contains the HTTP headers, body, and queryParams of the authentication request."
        }
      ],
      "datatype": "Auth.AuthProviderTokenResponse"
    },
    {
      "name": "initiate",
      "signature": "public System.PageReference initiate(Map<String,String> authProviderConfiguration, String stateToPropagate)",
      "description": "Returns the URL where the user is redirected for authentication.",
      "params": [
        {
          "name": "stateToPropagate",
          "datatype": "String",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The state passed in to initiate the authentication request for the user."
        }
      ],
      "datatype": "System.PageReference"
    },
    {
      "name": "refresh",
      "signature": "public Auth.OAuthRefreshResult refresh(Map<String,String> authProviderConfiguration, String refreshToken)",
      "description": "Returns a new access token, which is used to update an expired access token.",
      "params": [
        {
          "name": "refreshToken",
          "datatype": "String",
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The refresh token for the user who is logged in."
        }
      ],
      "datatype": "Auth.OAuthRefreshResult"
    }
  ],
  "description": "Contains methods to create a custom OAuth-based authentication provider plug-in for single sign-on in to Salesforce. Use this class to create a custom authentication provider plug-in if you can’t use one of the authentication providers that Salesforce provides.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_AuthProviderPluginClass.htm"
}