{
  "name": "SessionManagement",
  "namespace": "Auth",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "finishLoginDiscovery",
      "signature": "public static System.PageReference finishLoginDiscovery(Auth.LoginDiscoveryMethod method, Id userId)",
      "description": "Finishes the My Domain Login Discovery login process.",
      "params": [
        {
          "name": "userId",
          "datatype": "Id",
          "description": "Verification method used with My Domain Login Discovery. ID used to log in the user. The user must be active."
        }
      ],
      "datatype": "System.PageReference"
    },
    {
      "name": "finishLoginFlow",
      "signature": "public static System.PageReference finishLoginFlow()",
      "description": "Finish the Visualforce Page login flow process, and redirect the user to the default home page.",
      "params": [],
      "datatype": "System.PageReference"
    },
    {
      "name": "finishLoginFlow",
      "signature": "public static System.PageReference finishLoginFlow(String startUrl)",
      "description": "Finish the Visualforce Page login flow process, and redirect the user to the specified start URL.",
      "params": [
        {
          "name": "startUrl",
          "datatype": "String",
          "description": "Path to the page that users see when they access the community."
        }
      ],
      "datatype": "System.PageReference"
    },
    {
      "name": "generateVerificationUrl",
      "signature": "public static String generateVerificationUrl(Auth.VerificationPolicy policy, String description, String destinationUrl)",
      "description": "Initiates a user identity verification flow with the verification method that the user registered with, and returns a URL to the identity verification screen. For example, if you have a custom Visualforce page that displays sensitive account details, you can prompt the user to verify identity before viewing it.",
      "params": [
        {
          "name": "destinationUrl",
          "datatype": "String",
          "description": "The session security policy required to initiate identity verification for the user’s session. For example, if the policy is set to High Assurance level of session security, and the user’s current session has the standard level of session security, the user’s session is raised to high assurance after successful verification of identity. In the Setup user interface, this value is shown in the Triggered By column of Identity Verification History. The custom description that describes the activity requiring identity verification; for example, “Complete purchase and check out”. This text appears to users when they verify their identity in Salesforce and, if they use Salesforce Authenticator version 2 or later, in the Salesforce Authenticator mobile app. In addition, in the Setup user interface, this text is shown in the Activity Message column of Identity Verification History. The relative or absolute Salesforce URL that you want to redirect the user to after identity verification—for example, /apex/mypage. The user is redirected to destinationUrl when the identity verification flow is complete, regardless of success. For example, if a user chooses to not respond to the identity challenge and cancels it, the user is still redirected to destinationUrl. As a best practice, ensure that your code for this page manually checks that the security policy was satisfied (and the user didn’t just manually type the URL in the browser). For example, if the policy is High Assurance, the target page checks that the user's session is high assurance before allowing access."
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getCurrentSession",
      "signature": "public static Map<String, String> getCurrentSession()",
      "description": "Returns a map of attributes for the current session.",
      "params": [],
      "datatype": "Map<String, String>"
    },
    {
      "name": "getLightningLoginEligibility",
      "signature": "public static Auth.LightningLoginEligibility getLightningLoginEligibility(Id userId)",
      "description": "Returns the eligibility status for a user who’s logging in with Lightning Login when you set up your org with My Domain and use the Login Discovery page type. Use this method to redirect the user to a custom login flow. For example, use after a login attempt to redirect the user to password flow if the user is ineligible for Lightning Login.",
      "params": [
        {
          "name": "userId",
          "datatype": "Id",
          "description": "ID of the user who is logging in."
        }
      ],
      "datatype": "Auth.LightningLoginEligibility"
    },
    {
      "name": "getQrCode",
      "signature": "public static Map<String, String> getQrCode()",
      "description": "Returns a map containing a URL to a quick response (QR) code and a time-based one-time password (TOTP) shared secret to configure two-factor authentication apps or devices.",
      "params": [],
      "datatype": "Map<String, String>"
    },
    {
      "name": "getRequiredSessionLevelForProfile",
      "signature": "public static Auth.SessionLevel getRequiredSessionLevelForProfile(String profileId)",
      "description": "Indicates the required login security session level for the given profile.",
      "params": [
        {
          "name": "profileId",
          "datatype": "String",
          "description": "The 15-character profile ID."
        }
      ],
      "datatype": "Auth.SessionLevel"
    },
    {
      "name": "ignoreForConcurrentSessionLimit",
      "signature": "public static Map<String,String> ignoreForConcurrentSessionLimit(Object sessions)",
      "description": "This method is reserved for internal Salesforce use.",
      "params": [
        {
          "name": "sessions",
          "datatype": "",
          "description": ""
        }
      ],
      "datatype": "Map<String, String>"
    },
    {
      "name": "inOrgNetworkRange",
      "signature": "public static Boolean inOrgNetworkRange(String ipAddress)",
      "description": "Indicates whether the given IP address is within the organization's trusted IP range according to the organization's Network Access settings.",
      "params": [
        {
          "name": "ipAddress",
          "datatype": "String",
          "description": "The IP address to validate."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "isIpAllowedForProfile",
      "signature": "public static Boolean isIpAllowedForProfile(String profileId, String ipAddress)",
      "description": "Indicates whether the given IP address is within the trusted IP range for the given profile.",
      "params": [
        {
          "name": "ipAddress",
          "datatype": "String",
          "description": "The 15-character alphanumeric string for the current user’s profile ID. The IP address to validate."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "setSessionLevel",
      "signature": "public static Void setSessionLevel(Auth.SessionLevel level)",
      "description": "Sets the user's current session security level.",
      "params": [
        {
          "name": "level",
          "datatype": "",
          "description": "The session security level to assign to the user. The meaning of each level can be customized in the Session Settings for each organization, such as setting the High Assurance level to apply only to users who authenticated with two-factor authentication or through a specific identity provider."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "validateTotpTokenForKey",
      "signature": "public static Boolean validateTotpTokenForKey(String sharedKey, String totpCode)",
      "description": "Deprecated. Use validateTotpTokenForKey(totpSharedKey, totpCode, description) instead.",
      "params": [
        {
          "name": "totpCode",
          "datatype": "String",
          "description": "The shared (secret) key. The sharedKey must be a base32-encoded string of a 20-byte shared key. The time-based one-time password (TOTP) code to validate."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "validateTotpTokenForKey",
      "signature": "public static Boolean validateTotpTokenForKey(String totpSharedKey, String totpCode, String description)",
      "description": "Indicates whether a time-based one-time password (TOTP) code (token) is valid for the given shared key.",
      "params": [
        {
          "name": "description",
          "datatype": "String",
          "description": "The shared (secret) key. The totpSharedKey must be a base32-encoded string of a 20-byte shared key. The time-based one-time password (TOTP) code to validate. The custom description that describes the activity requiring identity verification; for example, “Complete purchase and check out”. In the Setup user interface, this text is shown in the Activity Message column of Identity Verification History. The description must be 128 characters or fewer. If you provide a value that’s longer, it’s truncated to 128 characters."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "validateTotpTokenForUser",
      "signature": "public static Boolean validateTotpTokenForUser(String totpCode)",
      "description": "Deprecated. Use validateTotpTokenForUser(totpCode, description) instead.",
      "params": [
        {
          "name": "totpCode",
          "datatype": "String",
          "description": "The time-based one-time password (TOTP) code to validate."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "validateTotpTokenForUser",
      "signature": "public static Boolean validateTotpTokenForUser(String totpCode, String description)",
      "description": "Indicates whether a time-based one-time password (TOTP) code (token) is valid for the current user.",
      "params": [
        {
          "name": "description",
          "datatype": "String",
          "description": "The time-based one-time password (TOTP) code to validate. The custom description that describes the activity requiring identity verification; for example, “Complete purchase and check out”. This text appears to users when they verify their identity in Salesforce and, if they use Salesforce Authenticator version 2 or later, in the Salesforce Authenticator mobile app. In addition, in the Setup user interface, this text is shown in the Activity Message column of Identity Verification History. The description must be 128 characters or fewer. If you provide a value that’s longer, it’s truncated to 128 characters."
        }
      ],
      "datatype": "Boolean"
    }
  ],
  "description": "Contains methods for verifying users’ identity, creating custom login flows, customizing security levels, and defining trusted IP ranges for a current session.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_SessionManagement.htm"
}