{
  "name": "QueryUtils",
  "namespace": "Datasource",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "applyLimitAndOffset",
      "signature": "public static List<Map<String,Object>> applyLimitAndOffset(DataSource.QueryContext queryContext, List<Map<String,Object>> rows)",
      "description": "Returns a subset of data rows after locally applying limit and offset clauses from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": [
        {
          "name": "rows",
          "datatype": "List<Map<String, Object>>",
          "description": "Represents the query to run against a data table. Rows of data."
        }
      ],
      "datatype": "List<Map<String, Object>>"
    },
    {
      "name": "filter",
      "signature": "public static List<Map<String,bject>> filter(DataSource.QueryContext queryContext, List<Map<String,Object>> rows)",
      "description": "Returns a subset of data rows after locally ordering and applying filters from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": [
        {
          "name": "rows",
          "datatype": "List<Map<String, Object>>",
          "description": "Represents the query to run against a data table. Rows of data."
        }
      ],
      "datatype": "List<Map<String, Object>>"
    },
    {
      "name": "process",
      "signature": "public static List<Map<String,bject>> process(DataSource.QueryContext queryContext, List<Map<String,Object>> rows)",
      "description": "Returns data rows after locally filtering, sorting, ordering, and applying limit and offset clauses from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": [
        {
          "name": "rows",
          "datatype": "List<Map<String, Object>>",
          "description": "Represents the query to run against a data table. Rows of data."
        }
      ],
      "datatype": "List<Map<String, Object>>"
    },
    {
      "name": "sort",
      "signature": "public static List<Map<String,ject>> sort(DataSource.QueryContext queryContext, List<Map<String,bject>> rows)",
      "description": "Returns data rows after locally sorting and applying the order from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": [
        {
          "name": "rows",
          "datatype": "List<Map<String, Object>>",
          "description": "Represents the query to run against a data table. Rows of data."
        }
      ],
      "datatype": "List<Map<String, Object>>"
    }
  ],
  "description": "Contains helper methods to locally filter, sort, and apply limit and offset clauses to data rows. This helper class is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_DataSource_QueryUtils.htm"
}