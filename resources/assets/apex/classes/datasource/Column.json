{
  "name": "Column",
  "namespace": "DataSource",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [
    {
      "name": "decimalPlaces",
      "signature": "public Integer decimalPlaces {get; set;}",
      "description": "If the data type is numeric, the number of decimal places to the right of the decimal point.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "description",
      "signature": "public String description {get; set;}",
      "description": "Description of what the column represents.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "filterable",
      "signature": "public Boolean filterable {get; set;}",
      "description": "Whether a result set can be filtered based on the values of the column.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "label",
      "signature": "public String label {get; set;}",
      "description": "User-friendly name for the column that appears in the Salesforce user interface.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "length",
      "signature": "public Integer length {get; set;}",
      "description": "If the column is a string data type, the number of characters in the column. If the column is a numeric data type, the total number of digits on both sides of the decimal point, but excluding the decimal point.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "name",
      "signature": "public String name {get; set;}",
      "description": "Name of the column in the external system.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "referenceTargetField",
      "signature": "public String referenceTargetField {get; set;}",
      "description": "API name of the custom field on the parent object whose values are compared against this column’s values. Matching values identify related records in an indirect lookup relationship. Applies only when the column’s data type is INDIRECT_LOOKUP_TYPE. For other data types, this value is ignored.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "referenceTo",
      "signature": "public String referenceTo {get; set;}",
      "description": "API name of the parent object in the relationship that’s represented by this column. Applies only when the column’s data type is LOOKUP_TYPE, EXTERNAL_LOOKUP_TYPE, or INDIRECT_LOOKUP_TYPE. For other data types, this value is ignored.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "sortable",
      "signature": "public Boolean sortable {get; set;}",
      "description": "Whether a result set can be sorted based on the values of the column via an ORDER BY clause.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "type",
      "signature": "public DataSource.DataType type {get; set;}",
      "description": "Data type of the column.",
      "methodParams": [],
      "datatype": "void"
    }
  ],
  "constuctors": [],
  "methods": [
    {
      "name": "boolean",
      "signature": "public static DataSource.Column boolean(String name)",
      "description": "Returns a new column of data type BOOLEAN_TYPE.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "externalLookup",
      "signature": "public static DataSource.Column externalLookup(String name, String domain)",
      "description": "Returns a new column of data type EXTERNAL_LOOKUP_TYPE.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "domain",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "get",
      "signature": "public static DataSource.Column get(String name, String label, String description, Boolean isSortable, Boolean isFilterable, DataSource.DataType type, Integer length, Integer decimalPlaces, String referenceTo, String referenceTargetField)",
      "description": "Returns a new column with the ten specified Column property values.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "label",
          "datatype": "String"
        },
        {
          "name": "description",
          "datatype": "String"
        },
        {
          "name": "isSortable",
          "datatype": "Boolean"
        },
        {
          "name": "isFilterable",
          "datatype": "Boolean"
        },
        {
          "name": "type",
          "datatype": "DataSource.DataType"
        },
        {
          "name": "length",
          "datatype": "Integer"
        },
        {
          "name": "decimalPlaces",
          "datatype": "Integer"
        },
        {
          "name": "referenceTo",
          "datatype": "String"
        },
        {
          "name": "referenceTargetField",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "get",
      "signature": "public static DataSource.Column get(String name, String label, String description, Boolean isSortable, Boolean isFilterable, DataSource.DataType type, Integer length, Integer decimalPlaces)",
      "description": "Returns a new column with the eight specified Column property values.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "label",
          "datatype": "String"
        },
        {
          "name": "description",
          "datatype": "String"
        },
        {
          "name": "isSortable",
          "datatype": "Boolean"
        },
        {
          "name": "isFilterable",
          "datatype": "Boolean"
        },
        {
          "name": "type",
          "datatype": "DataSource.DataType"
        },
        {
          "name": "length",
          "datatype": "Integer"
        },
        {
          "name": "decimalPlaces",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "get",
      "signature": "public static DataSource.Column get(String name, String label, String description, Boolean isSortable, Boolean isFilterable, DataSource.DataType type, Integer length)",
      "description": "Returns a new column with the seven specified Column property values.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "label",
          "datatype": "String"
        },
        {
          "name": "description",
          "datatype": "String"
        },
        {
          "name": "isSortable",
          "datatype": "Boolean"
        },
        {
          "name": "isFilterable",
          "datatype": "Boolean"
        },
        {
          "name": "type",
          "datatype": "DataSource.DataType"
        },
        {
          "name": "length",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "indirectLookup",
      "signature": "public static DataSource.Column indirectLookup(String name, String domain, String targetField)",
      "description": "Returns a new column of data type INDIRECT_LOOKUP_TYPE.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "domain",
          "datatype": "String"
        },
        {
          "name": "targetField",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "integer",
      "signature": "public static DataSource.Column integer(String name, Integer length)",
      "description": "Returns a new numeric column with no decimal places using the specified name and length.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "length",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "lookup",
      "signature": "public static DataSource.Column lookup(String name, String domain)",
      "description": "Returns a new column of data type LOOKUP_TYPE.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "domain",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "number",
      "signature": "public static DataSource.Column number(String name, Integer length, Integer decimalPlaces)",
      "description": "Returns a new column of data type NUMBER_TYPE.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "length",
          "datatype": "Integer"
        },
        {
          "name": "decimalPlaces",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "text",
      "signature": "public static DataSource.Column text(String name, String label, Integer length)",
      "description": "Returns a new column of data type STRING_SHORT_TYPE or STRING_LONG_TYPE, with the specified name, label, and length.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "label",
          "datatype": "String"
        },
        {
          "name": "length",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "text",
      "signature": "public static DataSource.Column text(String name, Integer length)",
      "description": "Returns a new column of data type STRING_SHORT_TYPE or STRING_LONG_TYPE, with the specified name and length.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "length",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "text",
      "signature": "public static DataSource.Column text(String name)",
      "description": "Returns a new column of data type STRING_SHORT_TYPE with the specified name and the length of 255 characters.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "textarea",
      "signature": "public static DataSource.Column textarea(String name)",
      "description": "Returns a new column of data type STRING_LONG_TYPE with the specified name and the length of 32,000 characters.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "url",
      "signature": "public static DataSource.Column url(String name, Integer length)",
      "description": "Returns a new column of data type URL_TYPE with the specified name and length.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        },
        {
          "name": "length",
          "datatype": "Integer"
        }
      ],
      "datatype": "DataSource.Column"
    },
    {
      "name": "url",
      "signature": "public static DataSource.Column url(String name)",
      "description": "Returns a new column of data type URL_TYPE with the specified name and the length of 1,000 characters.",
      "methodParams": [
        {
          "name": "name",
          "datatype": "String"
        }
      ],
      "datatype": "DataSource.Column"
    }
  ],
  "description": "Describes a column on a DataSource.Table. This class extends the",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_DataSource_Column.htm#apex_class_DataSource_Column"
}