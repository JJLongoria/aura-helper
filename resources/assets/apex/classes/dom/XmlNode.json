{
  "name": "XmlNode",
  "namespace": "Dom",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "addChildElement",
      "signature": "public Dom.XmlNode addChildElement(String name, String namespace, String prefix)",
      "description": "Creates a child element node for this node.",
      "params": [
        {
          "name": "prefix",
          "datatype": "String",
          "description": "The name argument can't have a null value."
        }
      ],
      "datatype": "Dom.XmlNode"
    },
    {
      "name": "addCommentNode",
      "signature": "public Dom.XmlNode addCommentNode(String text)",
      "description": "Creates a child comment node for this node.",
      "params": [
        {
          "name": "text",
          "datatype": "String",
          "description": "The text argument can't have a null value."
        }
      ],
      "datatype": "Dom.XmlNode"
    },
    {
      "name": "addTextNode",
      "signature": "public Dom.XmlNode addTextNode(String text)",
      "description": "Creates a child text node for this node.",
      "params": [
        {
          "name": "text",
          "datatype": "String",
          "description": "The text argument can't have a null value."
        }
      ],
      "datatype": "Dom.XmlNode"
    },
    {
      "name": "getAttribute",
      "signature": "public String getAttribute(String key, String keyNamespace)",
      "description": "Returns namespacePrefix:attributeValue for the given key and key namespace.",
      "params": [
        {
          "name": "keyNamespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getAttributeCount",
      "signature": "public Integer getAttributeCount()",
      "description": "Returns the number of attributes for this node.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "getAttributeKeyAt",
      "signature": "public String getAttributeKeyAt(Integer index)",
      "description": "Returns the attribute key for the given index. Index values start at 0.",
      "params": [
        {
          "name": "index",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getAttributeKeyNsAt",
      "signature": "public String getAttributeKeyNsAt(Integer index)",
      "description": "Returns the attribute key namespace for the given index.",
      "params": [
        {
          "name": "index",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getAttributeValue",
      "signature": "public String getAttributeValue(String key, String keyNamespace)",
      "description": "Returns the attribute value for the given key and key namespace.",
      "params": [
        {
          "name": "keyNamespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getAttributeValueNs",
      "signature": "public String getAttributeValueNs(String key, String keyNamespace)",
      "description": "Returns the attribute value namespace for the given key and key namespace.",
      "params": [
        {
          "name": "keyNamespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getChildElement",
      "signature": "public Dom.XmlNode getChildElement(String name, String namespace)",
      "description": "Returns the child element node for the node with the given name and namespace.",
      "params": [
        {
          "name": "namespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Dom.XmlNode"
    },
    {
      "name": "getChildElements",
      "signature": "public Dom.XmlNode[] getChildElements()",
      "description": "Returns the child element nodes for this node. This doesn't include child text or comment nodes.",
      "params": [],
      "datatype": "Dom.XmlNode[]"
    },
    {
      "name": "getChildren",
      "signature": "public Dom.XmlNode[] getChildren()",
      "description": "Returns the child nodes for this node. This includes all node types.",
      "params": [],
      "datatype": "Dom.XmlNode[]"
    },
    {
      "name": "getName",
      "signature": "public String getName()",
      "description": "Returns the element name.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getNamespace",
      "signature": "public String getNamespace()",
      "description": "Returns the namespace of the element.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getNamespaceFor",
      "signature": "public String getNamespaceFor(String prefix)",
      "description": "Returns the namespace of the element for the given prefix.",
      "params": [
        {
          "name": "prefix",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getNodeType",
      "signature": "public Dom.XmlNodeType getNodeType()",
      "description": "Returns the node type.",
      "params": [],
      "datatype": "Dom.XmlNodeType"
    },
    {
      "name": "getParent",
      "signature": "public Dom.XmlNode getParent()",
      "description": "Returns the parent of this element.",
      "params": [],
      "datatype": "Dom.XmlNode"
    },
    {
      "name": "getPrefixFor",
      "signature": "public String getPrefixFor(String namespace)",
      "description": "Returns the prefix of the given namespace.",
      "params": [
        {
          "name": "namespace",
          "datatype": "String",
          "description": "The namespace argument can't have a null value."
        }
      ],
      "datatype": "String"
    },
    {
      "name": "getText",
      "signature": "public String getText()",
      "description": "Returns the text for this node.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "insertBefore",
      "signature": "public Dom.XmlNode insertBefore(Dom.XmlNode newChild, Dom.XmlNode refChild)",
      "description": "Inserts a new child node before the specified node.",
      "params": [
        {
          "name": "refChild",
          "datatype": "Dom.XmlNode",
          "description": "The node to insert. The node before the new node."
        }
      ],
      "datatype": "Dom.XmlNode"
    },
    {
      "name": "removeAttribute",
      "signature": "public Boolean removeAttribute(String key, String keyNamespace)",
      "description": "Removes the attribute with the given key and key namespace. Returns true if successful, false otherwise.",
      "params": [
        {
          "name": "keyNamespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "removeChild",
      "signature": "public Boolean removeChild(Dom.XmlNode childNode)",
      "description": "Removes the given child node.",
      "params": [
        {
          "name": "childNode",
          "datatype": "Dom.XmlNode",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "setAttribute",
      "signature": "public Void setAttribute(String key, String value)",
      "description": "Sets the key attribute value.",
      "params": [
        {
          "name": "value",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setAttributeNs",
      "signature": "public Void setAttributeNs(String key, String value, String keyNamespace, String valueNamespace)",
      "description": "Sets the key attribute value.",
      "params": [
        {
          "name": "valueNamespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setNamespace",
      "signature": "public Void setNamespace(String prefix, String namespace)",
      "description": "Sets the namespace for the given prefix.",
      "params": [
        {
          "name": "namespace",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Void"
    }
  ],
  "description": "Use the XmlNode class to work with a node in an XML document.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_xml_dom_xmlnode.htm"
}