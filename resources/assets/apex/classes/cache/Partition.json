{
  "name": "Partition",
  "namespace": "Cache",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "contains",
      "signature": "public Boolean contains(String key)",
      "description": "Returns true if the cache partition contains a cached value corresponding to the specified key.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "A case-sensitive string value that uniquely identifies a cached value."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "createFullyQualifiedKey",
      "signature": "public static String createFullyQualifiedKey(String namespace, String partition, String key)",
      "description": "Generates a fully qualified key from the passed-in key components. The format of the generated key string is namespace.partition.key.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "The namespace of the cache key. The partition of the cache key. The name of the cache key."
        }
      ],
      "datatype": "String"
    },
    {
      "name": "createFullyQualifiedPartition",
      "signature": "public static String createFullyQualifiedPartition(String namespace, String partition)",
      "description": "Generates a fully qualified partition name from the passed-in namespace and partition. The format of the generated partition string is namespace.partition.",
      "params": [
        {
          "name": "partition",
          "datatype": "String",
          "description": "The namespace of the cache key. The partition of the cache key."
        }
      ],
      "datatype": "String"
    },
    {
      "name": "get",
      "signature": "public Object get(String key)",
      "description": "Returns the cached value corresponding to the specified key from the cache partition.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "A case-sensitive string value that uniquely identifies a cached value."
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "get",
      "signature": "public Object get(System.Type cacheBuilder, String key)",
      "description": "Returns the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "The Apex class that implements the CacheBuilder interface. A case-sensitive string value that, combined with the class name corresponding to the cacheBuilder parameter, uniquely identifies a cached value."
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "getAvgGetTime",
      "signature": "public Long getAvgGetTime()",
      "description": "Returns the average time taken to get a key from the partition, in nanoseconds.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getAvgValueSize",
      "signature": "public Long getAvgValueSize()",
      "description": "Returns the average item size for keys in the partition, in bytes.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getCapacity",
      "signature": "public Double getCapacity()",
      "description": "Returns the percentage of cache used of the total capacity for this partition.",
      "params": [],
      "datatype": "Double"
    },
    {
      "name": "getKeys",
      "signature": "public Set<String> getKeys()",
      "description": "Returns a set of all keys that are stored in the cache partition and visible to the invoking namespace.",
      "params": [],
      "datatype": "Set<String>"
    },
    {
      "name": "getMaxGetTime",
      "signature": "public Long getMaxGetTime()",
      "description": "Returns the maximum time taken to get a key from the partition, in nanoseconds.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getMaxValueSize",
      "signature": "public Long getMaxValueSize()",
      "description": "Returns the maximum item size for keys in the partition, in bytes.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getMissRate",
      "signature": "public Double getMissRate()",
      "description": "Returns the miss rate in the partition.",
      "params": [],
      "datatype": "Double"
    },
    {
      "name": "getName",
      "signature": "public String getName()",
      "description": "Returns the name of this cache partition.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getNumKeys",
      "signature": "public Long getNumKeys()",
      "description": "Returns the total number of keys in the partition.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "isAvailable",
      "signature": "public Boolean isAvailable()",
      "description": "Returns true if the Salesforce session is available. Only applies to Cache.SessionPartition. The session cache isn’t available when an active session isn’t present, such as in asynchronous Apex or code called by asynchronous Apex. For example, if batch Apex causes an Apex trigger to execute, the session cache isn’t available in the trigger because the trigger runs in asynchronous context.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. The put method can write only to the cache in your org’s namespace.",
      "params": [
        {
          "name": "value",
          "datatype": "Object",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, cache.Visibility visibility)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s visibility.",
      "params": [
        {
          "name": "visibility",
          "datatype": "Cache.Visibility",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable. Indicates whether the cached value is available only to Apex code that is executing in the same namespace or to Apex code executing from any namespace."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, Integer ttlSecs)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s lifetime.",
      "params": [
        {
          "name": "ttlSecs",
          "datatype": "Integer",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable. The amount of time, in seconds, to keep the cached value in the cache."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, Integer ttlSecs, cache.Visibility visibility, Boolean immutable)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. This method also sets the cached value’s lifetime, visibility, and whether it can be overwritten by another namespace.",
      "params": [
        {
          "name": "immutable",
          "datatype": "Boolean",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable. The amount of time, in seconds, to keep the cached value in the cache. Indicates whether the cached value is available only to Apex code that is executing in the same namespace or to Apex code executing from any namespace. Indicates whether the cached value can be overwritten by another namespace (false) or not (true)."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "remove",
      "signature": "public Boolean remove(String key)",
      "description": "Deletes the cached value corresponding to the specified key from this cache partition.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "A case-sensitive string value that uniquely identifies a cached value."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "remove",
      "signature": "public Boolean remove(System.Type cacheBuilder, String key)",
      "description": "Deletes the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "The Apex class that implements the CacheBuilder interface. A case-sensitive string value that, combined with the class name corresponding to the cacheBuilder parameter, uniquely identifies a cached value."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "validateCacheBuilder",
      "signature": "public static void validateCacheBuilder(System.Type cacheBuilder)",
      "description": "Validates that the specified class implements the CacheBuilder interface.",
      "params": [
        {
          "name": "cacheBuilder",
          "datatype": "System.Type",
          "description": "The class to validate."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "validateKey",
      "signature": "public static void validateKey(Boolean isDefault, String key)",
      "description": "Validates a cache key. This method throws a Cache.InvalidParamException if the key is not valid. A valid key is not null and contains alphanumeric characters.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "Set to true if the key references a default partition. Otherwise, set to false. The key to validate."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "validateKeyValue",
      "signature": "public static void validateKeyValue(Boolean isDefault, String key, Object value)",
      "description": "Validates a cache key and ensures that the cache value is non-null. This method throws a Cache.InvalidParamException if the key or value is not valid. A valid key is not null and contains alphanumeric characters.",
      "params": [
        {
          "name": "value",
          "datatype": "Object",
          "description": "Set to true if the key references a default partition. Otherwise, set to false. The key to validate. The cache value to validate."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "validateKeys",
      "signature": "public static void validateKeys(Boolean isDefault, Set<String> keys)",
      "description": "Validates the specified cache keys. This method throws a Cache.InvalidParamException if the key is not valid. A valid key is not null and contains alphanumeric characters.",
      "params": [
        {
          "name": "keys",
          "datatype": "Set<String>",
          "description": "Set to true if the key references a default partition. Otherwise, set to false. A set of key string values to validate."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "validatePartitionName",
      "signature": "public static void validatePartitionName(String name)",
      "description": "Validates the partition name — for example, that it is not null.",
      "params": [
        {
          "name": "name",
          "datatype": "String",
          "description": "The name of the partition to validate."
        }
      ],
      "datatype": "void"
    }
  ],
  "description": "Base class of Cache.OrgPartition and Cache.SessionPartition. Use the subclasses to manage the cache partition for org caches and session caches.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_cache_Partition.htm"
}