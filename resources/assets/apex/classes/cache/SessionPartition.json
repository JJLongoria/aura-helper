{
  "name": "SessionPartition",
  "namespace": "Cache",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "Partition",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "contains",
      "signature": "public Boolean contains(String key)",
      "description": "Returns true if the cache partition contains a cached value corresponding to the specified key.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "A case-sensitive string value that uniquely identifies a cached value."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "get",
      "signature": "public Object get(String key)",
      "description": "Returns the cached value corresponding to the specified key from the cache partition.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "A case-sensitive string value that uniquely identifies a cached value."
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "get",
      "signature": "public Object get(System.Type cacheBuilder, String key)",
      "description": "Returns the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "The Apex class that implements the CacheBuilder interface. A case-sensitive string value that, combined with the class name corresponding to the cacheBuilder parameter, uniquely identifies a cached value."
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "getAvgGetTime",
      "signature": "public Long getAvgGetTime()",
      "description": "Returns the average time taken to get a key from the partition, in nanoseconds.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getAvgValueSize",
      "signature": "public Long getAvgValueSize()",
      "description": "Returns the average item size for keys in the partition, in bytes.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getCapacity",
      "signature": "public Double getCapacity()",
      "description": "Returns the percentage of cache used of the total capacity for this partition.",
      "params": [],
      "datatype": "Double"
    },
    {
      "name": "getKeys",
      "signature": "public Set<String> getKeys()",
      "description": "Returns a set of all keys that are stored in the cache partition and visible to the invoking namespace.",
      "params": [],
      "datatype": "Set<String>"
    },
    {
      "name": "getMaxGetTime",
      "signature": "public Long getMaxGetTime()",
      "description": "Returns the maximum time taken to get a key from the partition, in nanoseconds.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getMaxValueSize",
      "signature": "public Long getMaxValueSize()",
      "description": "Returns the maximum item size for keys in the partition, in bytes.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "getMissRate",
      "signature": "public Double getMissRate()",
      "description": "Returns the miss rate in the partition.",
      "params": [],
      "datatype": "Double"
    },
    {
      "name": "getName",
      "signature": "public String getName()",
      "description": "Returns the name of this cache partition.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getNumKeys",
      "signature": "public Long getNumKeys()",
      "description": "Returns the total number of keys in the partition.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "isAvailable",
      "signature": "public Boolean isAvailable()",
      "description": "Returns true if the Salesforce session is available. Only applies to Cache.SessionPartition. The session cache isn’t available when an active session isn’t present, such as in asynchronous Apex or code called by asynchronous Apex. For example, if batch Apex causes an Apex trigger to execute, the session cache isn’t available in the trigger because the trigger runs in asynchronous context.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. The put method can write only to the cache in your org’s namespace.",
      "params": [
        {
          "name": "value",
          "datatype": "Object",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, cache.Visibility visibility)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s visibility.",
      "params": [
        {
          "name": "visibility",
          "datatype": "Cache.Visibility",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable. Indicates whether the cached value is available only to Apex code that is executing in the same namespace or to Apex code executing from any namespace."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, Integer ttlSecs)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s lifetime.",
      "params": [
        {
          "name": "ttlSecs",
          "datatype": "Integer",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable. The amount of time, in seconds, to keep the cached value in the cache."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, Integer ttlSecs, cache.Visibility visibility, Boolean immutable)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. This method also sets the cached value’s lifetime, visibility, and whether it can be overwritten by another namespace.",
      "params": [
        {
          "name": "immutable",
          "datatype": "Boolean",
          "description": "A case-sensitive string value that uniquely identifies a cached value. The value to store in the cache. The cached value must be serializable. The amount of time, in seconds, to keep the cached value in the cache. Indicates whether the cached value is available only to Apex code that is executing in the same namespace or to Apex code executing from any namespace. Indicates whether the cached value can be overwritten by another namespace (false) or not (true)."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "remove",
      "signature": "public Boolean remove(String key)",
      "description": "Deletes the cached value corresponding to the specified key from this cache partition.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "A case-sensitive string value that uniquely identifies a cached value."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "remove",
      "signature": "public Boolean remove(System.Type cacheBuilder, String key)",
      "description": "Deletes the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "params": [
        {
          "name": "key",
          "datatype": "String",
          "description": "The Apex class that implements the CacheBuilder interface. A case-sensitive string value that, combined with the class name corresponding to the cacheBuilder parameter, uniquely identifies a cached value."
        }
      ],
      "datatype": "Boolean"
    }
  ],
  "description": "Contains methods to manage cache values in the session cache of a specific partition.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_cache_SessionPartition.htm"
}