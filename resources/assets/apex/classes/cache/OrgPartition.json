{
  "name": "OrgPartition",
  "namespace": "Cache",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "extendsType": "Cache.Partition",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constuctors": [],
  "methods": [
    {
      "name": "contains",
      "signature": "public Boolean contains(String key)",
      "description": "Returns true if the cache partition contains a cached value corresponding to the specified key.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "createFullyQualifiedKey",
      "signature": "public static String createFullyQualifiedKey(String namespace, String partition, String key)",
      "description": "Generates a fully qualified key from the passed-in key components. The format of the generated key string is namespace.partition.key.",
      "methodParams": [
        {
          "name": "namespace",
          "datatype": "String"
        },
        {
          "name": "partition",
          "datatype": "String"
        },
        {
          "name": "key",
          "datatype": "String"
        }
      ],
      "datatype": "String"
    },
    {
      "name": "createFullyQualifiedPartition",
      "signature": "public static String createFullyQualifiedPartition(String namespace, String partition)",
      "description": "Generates a fully qualified partition name from the passed-in namespace and partition. The format of the generated partition string is namespace.partition.",
      "methodParams": [
        {
          "name": "namespace",
          "datatype": "String"
        },
        {
          "name": "partition",
          "datatype": "String"
        }
      ],
      "datatype": "String"
    },
    {
      "name": "get",
      "signature": "public Object get(String key)",
      "description": "Returns the cached value corresponding to the specified key from the cache partition.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "get",
      "signature": "public Object get(System.Type cacheBuilder, String key)",
      "description": "Returns the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "methodParams": [
        {
          "name": "cacheBuilder",
          "datatype": "System.Type"
        },
        {
          "name": "key",
          "datatype": "String"
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "getAvgGetTime",
      "signature": "public Long getAvgGetTime()",
      "description": "Returns the average time taken to get a key from the partition, in nanoseconds.",
      "methodParams": [],
      "datatype": "Long"
    },
    {
      "name": "getAvgValueSize",
      "signature": "public Long getAvgValueSize()",
      "description": "Returns the average item size for keys in the partition, in bytes.",
      "methodParams": [],
      "datatype": "Long"
    },
    {
      "name": "getCapacity",
      "signature": "public Double getCapacity()",
      "description": "Returns the percentage of cache used of the total capacity for this partition.",
      "methodParams": [],
      "datatype": "Double"
    },
    {
      "name": "getKeys",
      "signature": "public Set<String> getKeys()",
      "description": "Returns a set of all keys that are stored in the cache partition and visible to the invoking namespace.",
      "methodParams": [],
      "datatype": "Set<String>"
    },
    {
      "name": "getMaxGetTime",
      "signature": "public Long getMaxGetTime()",
      "description": "Returns the maximum time taken to get a key from the partition, in nanoseconds.",
      "methodParams": [],
      "datatype": "Long"
    },
    {
      "name": "getMaxValueSize",
      "signature": "public Long getMaxValueSize()",
      "description": "Returns the maximum item size for keys in the partition, in bytes.",
      "methodParams": [],
      "datatype": "Long"
    },
    {
      "name": "getMissRate",
      "signature": "public Double getMissRate()",
      "description": "Returns the miss rate in the partition.",
      "methodParams": [],
      "datatype": "Double"
    },
    {
      "name": "getName",
      "signature": "public String getName()",
      "description": "Returns the name of this cache partition.",
      "methodParams": [],
      "datatype": "String"
    },
    {
      "name": "getNumKeys",
      "signature": "public Long getNumKeys()",
      "description": "Returns the total number of keys in the partition.",
      "methodParams": [],
      "datatype": "Long"
    },
    {
      "name": "isAvailable",
      "signature": "public Boolean isAvailable()",
      "description": "Returns true if the Salesforce session is available. Only applies to Cache.SessionPartition. The session cache isn’t available when an active session isn’t present, such as in asynchronous Apex or code called by asynchronous Apex. For example, if batch Apex causes an Apex trigger to execute, the session cache isn’t available in the trigger because the trigger runs in asynchronous context.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. The put method can write only to the cache in your org’s namespace.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        },
        {
          "name": "value",
          "datatype": "Object"
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, cache.Visibility visibility)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s visibility.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        },
        {
          "name": "value",
          "datatype": "Object"
        },
        {
          "name": "visibility",
          "datatype": "Cache.Visibility"
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, Integer ttlSecs)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s lifetime.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        },
        {
          "name": "value",
          "datatype": "Object"
        },
        {
          "name": "ttlSecs",
          "datatype": "Integer"
        }
      ],
      "datatype": "void"
    },
    {
      "name": "put",
      "signature": "public void put(String key, Object value, Integer ttlSecs, cache.Visibility visibility, Boolean immutable)",
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. This method also sets the cached value’s lifetime, visibility, and whether it can be overwritten by another namespace.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        },
        {
          "name": "value",
          "datatype": "Object"
        },
        {
          "name": "ttlSecs",
          "datatype": "Integer"
        },
        {
          "name": "visibility",
          "datatype": "Cache.Visibility"
        },
        {
          "name": "immutable",
          "datatype": "Boolean"
        }
      ],
      "datatype": "void"
    },
    {
      "name": "remove",
      "signature": "public Boolean remove(String key)",
      "description": "Deletes the cached value corresponding to the specified key from this cache partition.",
      "methodParams": [
        {
          "name": "key",
          "datatype": "String"
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "remove",
      "signature": "public Boolean remove(System.Type cacheBuilder, String key)",
      "description": "Deletes the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "methodParams": [
        {
          "name": "cacheBuilder",
          "datatype": "System.Type"
        },
        {
          "name": "key",
          "datatype": "String"
        }
      ],
      "datatype": "Boolean"
    }
  ],
  "description": "Contains methods to manage cache values in the org cache of a specific",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_cache_OrgPartition.htm#apex_class_cache_OrgPartition"
}