{
  "name": "ChatterUsers",
  "namespace": "ConnectApi",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "deletePhoto",
      "signature": "public static Void deletePhoto(String communityId, String userId)",
      "description": "Delete a user’s photo.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "exportUserActivities",
      "signature": "public static ConnectApi.UserActivitiesJob exportUserActivities(String communityId, String userId)",
      "description": "Export Chatter-related user activity, such as bookmarks, topic endorsements, and votes.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the user."
        }
      ],
      "datatype": "ConnectApi.UserActivitiesJob"
    },
    {
      "name": "follow",
      "signature": "public static ConnectApi.Subscription follow(String communityId, String userId, String subjectId)",
      "description": "Follow a user or record.",
      "params": [
        {
          "name": "subjectId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. ID of the user or record to follow."
        }
      ],
      "datatype": "ConnectApi.​Subscription"
    },
    {
      "name": "getChatterSettings",
      "signature": "public static ConnectApi.UserChatterSettings getChatterSettings(String communityId, String userId)",
      "description": "Get the default Chatter settings for a user.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me."
        }
      ],
      "datatype": "ConnectApi.​User​​ChatterSettings"
    },
    {
      "name": "getFollowers",
      "signature": "public static ConnectApi.FollowerPage getFollowers(String communityId, String userId)",
      "description": "Get the first page of followers for a user.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.​FollowerPage"
    },
    {
      "name": "getFollowers",
      "signature": "public static ConnectApi.FollowerPage getFollowers(String communityId, String userId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of followers for a user.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.​FollowerPage"
    },
    {
      "name": "getFollowings",
      "signature": "public static ConnectApi.FollowingPage getFollowings(String communityId, String userId)",
      "description": "Get the first page of users and records that a user follows.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.​FollowingPage"
    },
    {
      "name": "getFollowings",
      "signature": "public static ConnectApi.FollowingPage getFollowings(String communityId, String userId, Integer pageParam)",
      "description": "Get a page of users and records that a user follows.",
      "params": [
        {
          "name": "pageParam",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned."
        }
      ],
      "datatype": "ConnectApi.​FollowingPage"
    },
    {
      "name": "getFollowings",
      "signature": "public static ConnectApi.FollowingPage getFollowings(String communityId, String userId, Integer pageParam, Integer pageSize)",
      "description": "Get a page with the specified number of users and records that a user follows.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.​FollowingPage"
    },
    {
      "name": "getFollowings",
      "signature": "public static ConnectApi.FollowingPage getFollowings(String communityId, String userId, String filterType)",
      "description": "Get the first page of records, filtered by key prefix, that a user follows.",
      "params": [
        {
          "name": "filterType",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the key prefix to filter the type of objects returned. A key prefix is the first three characters of the object ID, which specifies the object type. For example, User objects have a prefix of 005 and Group objects have a prefix of 0F9."
        }
      ],
      "datatype": "ConnectApi.​FollowingPage"
    },
    {
      "name": "getFollowings",
      "signature": "public static ConnectApi.FollowingPage getFollowings(String communityId, String userId, String filterType, Integer pageParam)",
      "description": "Get a page of records, filtered by key prefix, that a user follows.",
      "params": [
        {
          "name": "pageParam",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the key prefix to filter the type of objects returned. A key prefix is the first three characters of the object ID, which specifies the object type. For example, User objects have a prefix of 005 and Group objects have a prefix of 0F9. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned."
        }
      ],
      "datatype": "ConnectApi.​FollowingPage"
    },
    {
      "name": "getFollowings",
      "signature": "public static ConnectApi.FollowingPage getFollowings(String communityId, String userId, String filterType, Integer pageParam, Integer pageSize)",
      "description": "Get a page with the specified number of records, filtered by key prefix, that a user follows.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the key prefix to filter the type of objects returned. A key prefix is the first three characters of the object ID, which specifies the object type. For example, User objects have a prefix of 005 and Group objects have a prefix of 0F9. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.​FollowingPage"
    },
    {
      "name": "getGroups",
      "signature": "public static ConnectApi.UserGroupPage getGroups(String communityId, String userId)",
      "description": "Get the groups that a user is a member of.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.User​​GroupPage"
    },
    {
      "name": "getGroups",
      "signature": "public static ConnectApi.UserGroupPage getGroups(String communityId, String userId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of groups that a user is a member of.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.User​​GroupPage"
    },
    {
      "name": "getPhoto",
      "signature": "public static ConnectApi.Photo getPhoto(String communityId, String userId)",
      "description": "Get a user’s photo.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "getReputation",
      "signature": "public static ConnectApi.Reputation getReputation(String communityId, String userId)",
      "description": "Get a user’s reputation.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the user."
        }
      ],
      "datatype": "ConnectApi.Reputation"
    },
    {
      "name": "getUser",
      "signature": "public static ConnectApi.UserSummary getUser(String communityId, String userId)",
      "description": "Get information about a user.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.UserDetail"
    },
    {
      "name": "",
      "signature": "public static ConnectApi.BatchResult[] getUserBatch(String communityId, List<String> userIds)",
      "description": "Get information about a list of users.",
      "params": [
        {
          "name": "userIds",
          "datatype": "List<String>",
          "description": "Use either the ID for a community, internal, or null. A list of up to 500 user IDs."
        }
      ],
      "datatype": "ConnectApi.BatchResult[]"
    },
    {
      "name": "getUserGroups",
      "signature": "public static ConnectApi.UserGroupDetailPage getUserGroups(String communityId, String userId)",
      "description": "Get a user’s groups.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.UserGroupDetailPage"
    },
    {
      "name": "getUserGroups",
      "signature": "public static ConnectApi.UserGroupDetailPage getUserGroups(String communityId, String userId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of a user’s groups.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.UserGroupDetailPage"
    },
    {
      "name": "getUsers",
      "signature": "public static ConnectApi.UserPage getUsers(String communityId)",
      "description": "Get the first page of users.",
      "params": [
        {
          "name": "communityId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null."
        }
      ],
      "datatype": "ConnectApi.UserPage"
    },
    {
      "name": "getUsers",
      "signature": "public static ConnectApi.UserPage getUsers(String communityId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of users.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.UserPage"
    },
    {
      "name": "purgeUserActivities",
      "signature": "public static ConnectApi.UserActivitiesJob purgeUserActivities(String communityId, String userId)",
      "description": "Start a job to purge Chatter-related user activity, such as bookmarks, topic endorsements, and votes.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the user."
        }
      ],
      "datatype": "ConnectApi.UserActivitiesJob"
    },
    {
      "name": "searchUserGroupDetails",
      "signature": "public static ConnectApi.UserGroupDetailPage searchUserGroupDetails(String communityId, String userId, String q)",
      "description": "Get the user’s groups that match the search criteria.",
      "params": [
        {
          "name": "q",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards."
        }
      ],
      "datatype": "ConnectApi.UserGroupDetailPage"
    },
    {
      "name": "searchUserGroupDetails",
      "signature": "public static ConnectApi.UserGroupDetailPage searchUserGroupDetails(String communityId, String userId, String q, Integer pageParam, Integer pageSize)",
      "description": "Get a page of a user’s groups that match the search criteria.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.UserGroupDetailPage"
    },
    {
      "name": "",
      "signature": "public static ConnectApi.UserGroupPage searchUserGroups(String communityId, String userId, String q)",
      "description": "Get the user’s groups that match the search criteria.",
      "params": [
        {
          "name": "q",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards."
        }
      ],
      "datatype": "ConnectApi.User​​GroupPage"
    },
    {
      "name": "",
      "signature": "public static ConnectApi.UserGroupPage searchUserGroups(String communityId, String userId, String q, Integer pageParam, Integer pageSize)",
      "description": "Get a page of a user’s groups that match the search criteria.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a user. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.User​​GroupPage"
    },
    {
      "name": "searchUsers",
      "signature": "public static ConnectApi.UserPage searchUsers(String communityId, String q)",
      "description": "Get the first page of users that match the search criteria.",
      "params": [
        {
          "name": "q",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards."
        }
      ],
      "datatype": "ConnectApi.UserPage"
    },
    {
      "name": "searchUsers",
      "signature": "public static ConnectApi.UserPage searchUsers(String communityId, String q, Integer pageParam, Integer pageSize)",
      "description": "Get a page of users that match the search criteria.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.UserPage"
    },
    {
      "name": "searchUsers",
      "signature": "public static ConnectApi.UserPage searchUsers(String communityId, String q, String searchContextId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of users that match the search criteria.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  A feed item ID that filters search results for feed @mentions. More useful results are listed first. When you specify this argument, you cannot query more than 500 results and you cannot use wildcards in the search term. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.UserPage"
    },
    {
      "name": "setPhoto",
      "signature": "public static ConnectApi.Photo setPhoto(String communityId, String userId, String fileId, Integer versionNumber)",
      "description": "Set an uploaded file as a user’s photo.",
      "params": [
        {
          "name": "versionNumber",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. ID of a file already uploaded. The file must be an image, and be smaller than 2 GB. Version number of the existing file. Specify either an existing version number, or null to get the latest version."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "setPhoto",
      "signature": "public static ConnectApi.Photo setPhoto(String communityId, String userId, ConnectApi.BinaryInput fileUpload)",
      "description": "Set a file that hasn’t been uploaded as the user’s photo.",
      "params": [
        {
          "name": "fileUpload",
          "datatype": "ConnectApi.Binary​​Input",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. A file to use as the photo. The content type must be usable as an image."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "setPhotoWithAttributes",
      "signature": "public static ConnectApi.Photo setPhotoWithAttributes(String communityId, String userId, ConnectApi.PhotoInput photo)",
      "description": "Set and crop an uploaded file as a user’s photo.",
      "params": [
        {
          "name": "photo",
          "datatype": "ConnectApi.PhotoInput",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. A ConnectApi.PhotoInput object specifying the file ID, version number, and cropping parameters."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "setPhotoWithAttributes",
      "signature": "public static ConnectApi.Photo setPhotoWithAttributes(String communityId, String userId, ConnectApi.PhotoInput photo, ConnectApi.BinaryInput fileUpload)",
      "description": "Set and crop a file that hasn’t been uploaded as a user’s photo.",
      "params": [
        {
          "name": "fileUpload",
          "datatype": "ConnectApi.Binary​​Input",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. A ConnectApi.PhotoInput object specifying the cropping parameters. A file to use as the photo. The content type must be usable as an image."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "updateChatterSettings",
      "signature": "public static ConnectApi.UserChatterSettings updateChatterSettings(String communityId, String userId, ConnectApi.GroupEmailFrequency defaultGroupEmailFrequency)",
      "description": "Update the default Chatter settings for a user.",
      "params": [
        {
          "name": "defaultGroupEmailFrequency",
          "datatype": "ConnectApi.​GroupEmail​Frequency",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Frequency with which a user receives email. Values are: EachPost  DailyDigest  WeeklyDigest  Never  UseDefault   Don’t pass the value UseDefault for the defaultGroupEmailFrequency parameter because calling updateChatterSettings sets the default value."
        }
      ],
      "datatype": "ConnectApi.​User​​ChatterSettings"
    },
    {
      "name": "updateUser",
      "signature": "public static ConnectApi.UserDetail updateUser(String communityId, String userId, ConnectApi.UserInput userInput)",
      "description": "Update the About Me section for a user.",
      "params": [
        {
          "name": "userInput",
          "datatype": "ConnectApi.UserInput",
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the updated information."
        }
      ],
      "datatype": "ConnectApi.​User​Detail"
    },
    {
      "name": "setTestSearchUsers",
      "signature": "public static Void setTestSearchUsers(String communityId, String q, ConnectApi.UserPage result)",
      "description": "Register a ConnectApi.UserPage object to be returned when the matching ConnectApi.searchUsers method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "params": [
        {
          "name": "result",
          "datatype": "ConnectApi.UserPage",
          "description": "Use either the ID for a community, internal, or null. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  The object containing test data."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setTestSearchUsers",
      "signature": "public static Void setTestSearchUsers(String communityId, String q, Integer pageParam, Integer pageSize, ConnectApi.UserPage result)",
      "description": "Register a ConnectApi.UserPage object to be returned when the matching ConnectApi.searchUsers method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "params": [
        {
          "name": "result",
          "datatype": "ConnectApi.UserPage",
          "description": "Use either the ID for a community, internal, or null. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25. The object containing test data."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setTestSearchUsers",
      "signature": "public static Void setTestSearchUsers(String communityId, String q, String searchContextId, Integer pageParam, Integer pageSize, ConnectApi.UserPage result)",
      "description": "Register a ConnectApi.UserPage object to be returned when the matching ConnectApi.searchUsers method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "params": [
        {
          "name": "result",
          "datatype": "ConnectApi.UserPage",
          "description": "Use either the ID for a community, internal, or null. Required and cannot be null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards.  A feed item ID that filters search results for feed @mentions. More useful results are listed first. When you specify this argument, you cannot query more than 500 results and you cannot use wildcards in the search term. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25. The object containing test data."
        }
      ],
      "datatype": "Void"
    }
  ],
  "description": "Access information about users, such as activity, followers, subscriptions, files, and groups.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_ChatterUsers_static_methods.htm"
}