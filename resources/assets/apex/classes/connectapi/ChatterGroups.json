{
  "name": "ChatterGroups",
  "namespace": "ConnectApi",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "addMember",
      "signature": "public static ConnectApi.GroupMember addMember(String communityId, String groupId, String userId)",
      "description": "Add a user to a group as a standard member.",
      "params": [
        {
          "name": "userId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. The ID for a user."
        }
      ],
      "datatype": "ConnectApi.​GroupMember"
    },
    {
      "name": "addMemberWithRole",
      "signature": "public static ConnectApi.GroupMember addMemberWithRole(String communityId, String groupId, String userId, ConnectApi.GroupMembershipType role)",
      "description": "Add a user with a role to a group.",
      "params": [
        {
          "name": "role",
          "datatype": "ConnectApi.GroupMembershipType",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. The ID for a user. The group membership type. One of these values: GroupManager  StandardMember"
        }
      ],
      "datatype": "ConnectApi.​GroupMember"
    },
    {
      "name": "addRecord",
      "signature": "public static ConnectApi.GroupRecord addRecord(String communityId, String groupId, String recordId)",
      "description": "Associate a record with a group.",
      "params": [
        {
          "name": "recordId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the group with which to associate the record. ID of the record to associate with the group."
        }
      ],
      "datatype": "ConnectApi.GroupRecord"
    },
    {
      "name": "createGroup",
      "signature": "public static ConnectApi.ChatterGroupDetail createGroup(String, communityId, ConnectApi.ChatterGroupInput groupInput)",
      "description": "Create a group.",
      "params": [
        {
          "name": "groupInput",
          "datatype": "ConnectApi.Chatter​​GroupInput",
          "description": "Use either the ID for a community, internal, or null. The properties of the group."
        }
      ],
      "datatype": "ConnectApi.​Chatter​Group​Detail"
    },
    {
      "name": "deleteBannerPhoto",
      "signature": "public static Void deleteBannerPhoto(String communityId, String groupId)",
      "description": "Delete the group banner photo.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the group."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "deleteGroup",
      "signature": "public static Void deleteGroup(String communityId, String groupId)",
      "description": "Delete a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "deleteMember",
      "signature": "public static Void deleteMember(String communityId, String membershipId)",
      "description": "Remove a member from a group.",
      "params": [
        {
          "name": "membershipId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a membership."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "deletePhoto",
      "signature": "public static Void deletePhoto(String communityId, String groupId)",
      "description": "Delete the group photo.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "getAnnouncements",
      "signature": "public static ConnectApi.AnnouncementPage getAnnouncements(String communityId, String groupId)",
      "description": "Get the first page of announcements in a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.AnnouncementPage"
    },
    {
      "name": "getAnnouncements",
      "signature": "public static ConnectApi.AnnouncementPage getAnnouncements(String communityId, String groupId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of announcements in a group.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.AnnouncementPage"
    },
    {
      "name": "getBannerPhoto",
      "signature": "public static ConnectApi.BannerPhoto getBannerPhoto(String communityId, String groupId)",
      "description": "Get the group banner photo.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID of the group."
        }
      ],
      "datatype": "ConnectApi.​BannerPhoto"
    },
    {
      "name": "getGroup",
      "signature": "public static ConnectApi.ChatterGroupDetail getGroup(String communityId, String groupId)",
      "description": "Get information about a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.​Chatter​Group​Detail"
    },
    {
      "name": "getGroupBatch",
      "signature": "public static ConnectApi.BatchResult[] getGroupBatch(String communityId, List<String> groupIds)",
      "description": "Get information about a list of groups.",
      "params": [
        {
          "name": "groupIds",
          "datatype": "List<String>",
          "description": "Use either the ID for a community, internal, or null. A list of up to 500 group IDs."
        }
      ],
      "datatype": "ConnectApi.BatchResult[]"
    },
    {
      "name": "getGroupMembershipRequest",
      "signature": "public static ConnectApi.GroupMembershipRequest getGroupMembershipRequest(String communityId, String requestId)",
      "description": "Get information about a request to join a private group.",
      "params": [
        {
          "name": "requestId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID of a request to join a private group."
        }
      ],
      "datatype": "ConnectApi.​Group​Membership​Request"
    },
    {
      "name": "getGroupMembershipRequests",
      "signature": "public static ConnectApi.GroupMembershipRequests getGroupMembershipRequests(String communityId, String groupId)",
      "description": "Get information about every request to join a private group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.Group​​MembershipRequests"
    },
    {
      "name": "getGroupMembershipRequests",
      "signature": "public static ConnectApi.GroupMembershipRequests getGroupMembershipRequests(String communityId, String groupId, ConnectApi.GroupMembershipRequestStatus status)",
      "description": "Get information about every request to join a private group that has a specified status.",
      "params": [
        {
          "name": "status",
          "datatype": "ConnectApi.​GroupMembership​RequestStatus",
          "description": "Use either the ID for a community, internal, or null. The ID for a group.  status—Status of a request to join a private group. Accepted  Declined  Pending"
        }
      ],
      "datatype": "ConnectApi.Group​​MembershipRequests"
    },
    {
      "name": "getGroups",
      "signature": "public static ConnectApi.ChatterGroupPage getGroups(String communityId)",
      "description": "Get the first page of groups.",
      "params": [
        {
          "name": "communityId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null."
        }
      ],
      "datatype": "ConnectApi.Chatter​​​GroupPage"
    },
    {
      "name": "getGroups",
      "signature": "public static ConnectApi.ChatterGroupPage getGroups(String communityId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of groups.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.Chatter​​​GroupPage"
    },
    {
      "name": "getGroups",
      "signature": "public static ConnectApi.ChatterGroupPage getGroups(String communityId, Integer pageParam, Integer pageSize, ConnectApi.GroupArchiveStatus archiveStatus)",
      "description": "Get a page of groups with an archive status.",
      "params": [
        {
          "name": "archiveStatus",
          "datatype": "ConnectApi.GroupArchiveStatus",
          "description": "Use either the ID for a community, internal, or null. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25. Archive status of groups.  All—All groups, including groups that are archived and groups that aren’t archived.   Archived—Groups that are archived.   NotArchived—Groups that aren’t archived.    If you pass in null, the default value is All."
        }
      ],
      "datatype": "ConnectApi.Chatter​​​GroupPage"
    },
    {
      "name": "getMember",
      "signature": "public static ConnectApi.GroupMember getMember(String communityId, String membershipId)",
      "description": "Get information about a group member.",
      "params": [
        {
          "name": "membershipId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a membership."
        }
      ],
      "datatype": "ConnectApi.​GroupMember"
    },
    {
      "name": "getMembers",
      "signature": "public static ConnectApi.GroupMemberPage getMembers(String communityId, String groupId)",
      "description": "Get the first page of information about the members of a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.Group​​MemberPage"
    },
    {
      "name": "getMembers",
      "signature": "public static ConnectApi.GroupMemberPage getMembers(String communityId, String groupId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of information about the members of a group.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.Group​​MemberPage"
    },
    {
      "name": "",
      "signature": "public static ConnectApi.BatchResult[] getMembershipBatch(String communityId, List<String> membershipIds)",
      "description": "Get information about a list of group memberships.",
      "params": [
        {
          "name": "membershipIds",
          "datatype": "List<String>",
          "description": "Use either the ID for a community, internal, or null. A list of up to 500 group membership IDs."
        }
      ],
      "datatype": "ConnectApi.BatchResult[]"
    },
    {
      "name": "getMyChatterSettings",
      "signature": "public static ConnectApi.GroupChatterSettings getMyChatterSettings(String communityId, String groupId)",
      "description": "Get the context user’s Chatter settings for a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.Group​​ChatterSettings"
    },
    {
      "name": "getPhoto",
      "signature": "public static ConnectApi.Photo getPhoto(String communityId, String groupId)",
      "description": "Get the photo for a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "getRecord",
      "signature": "public static ConnectApi.GroupRecord getRecord(String communityId, String groupRecordId)",
      "description": "Get a record associated with a group.",
      "params": [
        {
          "name": "groupRecordId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the group record."
        }
      ],
      "datatype": "ConnectApi.GroupRecord"
    },
    {
      "name": "getRecords",
      "signature": "public static ConnectApi.GroupRecordPage getRecords(String communityId, String groupId)",
      "description": "Get the first page of records associated with a group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.​GroupRecordPage"
    },
    {
      "name": "getRecords",
      "signature": "public static ConnectApi.GroupRecordPage getRecords(String communityId, String groupId, Integer pageParam, Integer pageSize)",
      "description": "Get a page of records associated with a group.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.​GroupRecordPage"
    },
    {
      "name": "inviteUsers",
      "signature": "public static ConnectApi.Invitations inviteUsers(String groupId, ConnectApi.InviteInput invite)",
      "description": "Invite internal and external users to join a group.",
      "params": [
        {
          "name": "invite",
          "datatype": "ConnectApi.InviteInput",
          "description": "ID of the group. A ConnectApi.InviteInput body."
        }
      ],
      "datatype": "ConnectApi.Invitations"
    },
    {
      "name": "postAnnouncement",
      "signature": "public static ConnectApi.Announcement postAnnouncement(String communityId, String groupId, ConnectApi.AnnouncementInput announcement)",
      "description": "Post an announcement to a group.",
      "params": [
        {
          "name": "announcement",
          "datatype": "ConnectApi.AnnouncementInput",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. A ConnectApi.AnnouncementInput object."
        }
      ],
      "datatype": "ConnectApi.Announcement"
    },
    {
      "name": "removeRecord",
      "signature": "public static Void removeRecord(String communityId, String groupRecordId)",
      "description": "Remove the association of a record with a group.",
      "params": [
        {
          "name": "groupRecordId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID of the group record."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "requestGroupMembership",
      "signature": "public static ConnectApi.GroupMembershipRequest requestGroupMembership(String communityId, String groupId)",
      "description": "Request membership in a private group.",
      "params": [
        {
          "name": "groupId",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. The ID for a group."
        }
      ],
      "datatype": "ConnectApi.​Group​Membership​Request"
    },
    {
      "name": "searchGroups",
      "signature": "public static ConnectApi.ChatterGroupPage searchGroups(String communityId, String q)",
      "description": "Get the first page of groups that match the search criteria.",
      "params": [
        {
          "name": "q",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards. Can be specified as null."
        }
      ],
      "datatype": "ConnectApi.Chatter​​​GroupPage"
    },
    {
      "name": "searchGroups",
      "signature": "public static ConnectApi.ChatterGroupPage searchGroups(String communityId, String q, Integer pageParam, Integer pageSize)",
      "description": "Get a page of groups that match the search criteria.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards. Can be specified as null. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.Chatter​​​GroupPage"
    },
    {
      "name": "searchGroups",
      "signature": "public static ConnectApi.ChatterGroupPage searchGroups(String communityId, String q, ConnectApi.GroupArchiveStatus archiveStatus, Integer pageParam, Integer pageSize)",
      "description": "Get a page of groups with the archive status that match the search criteria.",
      "params": [
        {
          "name": "pageSize",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards. Can be specified as null.  Archive status of groups.  All—All groups, including groups that are archived and groups that aren’t archived.   Archived—Groups that are archived.   NotArchived—Groups that aren’t archived.    Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25."
        }
      ],
      "datatype": "ConnectApi.Chatter​​​GroupPage"
    },
    {
      "name": "setBannerPhoto",
      "signature": "public static ConnectApi.BannerPhoto setBannerPhoto(String communityId, String groupId, String fileId, Integer versionNumber)",
      "description": "Set an uploaded file as the group banner photo.",
      "params": [
        {
          "name": "versionNumber",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID of the group. The ID of the already uploaded file. The key prefix must be 069, and the image must be smaller than 8 MB. Version number of the existing file. Specify either an existing version number or, to get the latest version, specify null."
        }
      ],
      "datatype": "ConnectApi.​BannerPhoto"
    },
    {
      "name": "setBannerPhoto",
      "signature": "public static ConnectApi.BannerPhoto setBannerPhoto(String communityId, String groupId, ConnectApi.BinaryInput fileUpload)",
      "description": "Set a file that hasn’t been uploaded as the group banner photo.",
      "params": [
        {
          "name": "fileUpload",
          "datatype": "ConnectApi.Binary​​Input",
          "description": "Use either the ID for a community, internal, or null. The ID of the group. A file to use as the photo. The content type must be usable as an image."
        }
      ],
      "datatype": "ConnectApi.​BannerPhoto"
    },
    {
      "name": "setBannerPhotoWithAttributes",
      "signature": "public static ConnectApi.BannerPhoto setBannerPhotoWithAttributes(String communityId, String groupId, ConnectApi.BannerPhotoInput bannerPhoto)",
      "description": "Set and crop an uploaded file as the group banner photo.",
      "params": [
        {
          "name": "bannerPhoto",
          "datatype": "ConnectApi.BannerPhotoInput",
          "description": "Use either the ID for a community, internal, or null. The ID of the group. A ConnectApi.BannerPhotoInput object that specifies the ID and version of the file, and how to crop the file."
        }
      ],
      "datatype": "ConnectApi.​BannerPhoto"
    },
    {
      "name": "setBannerPhotoWithAttributes",
      "signature": "public static ConnectApi.BannerPhoto setBannerPhotoWithAttributes(String communityId, String groupId, ConnectApi.BannerPhotoInput bannerPhoto, ConnectApi.BinaryInput fileUpload)",
      "description": "Set and crop a file that hasn’t been uploaded as the group banner photo.",
      "params": [
        {
          "name": "fileUpload",
          "datatype": "ConnectApi.Binary​​Input",
          "description": "Use either the ID for a community, internal, or null. The ID of the group. A ConnectApi.BannerPhotoInput object specifying the cropping parameters. A file to use as the photo. The content type must be usable as an image."
        }
      ],
      "datatype": "ConnectApi.​BannerPhoto"
    },
    {
      "name": "setPhoto",
      "signature": "public static ConnectApi.Photo setPhoto(String communityId, String groupId, String fileId, Integer versionNumber)",
      "description": "Set an uploaded file as the group photo.",
      "params": [
        {
          "name": "versionNumber",
          "datatype": "Integer",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. ID of a file already uploaded. The key prefix must be 069, and the file must be an image that is smaller than 2 GB. Version number of the existing file. Specify either an existing version number or, to get the latest version, specify null."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "setPhoto",
      "signature": "public static ConnectApi.Photo setPhoto(String communityId, String groupId, ConnectApi.BinaryInput fileUpload)",
      "description": "Set a file that hasn’t been uploaded as the group photo.",
      "params": [
        {
          "name": "fileUpload",
          "datatype": "ConnectApi.Binary​​Input",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. A file to use as the photo. The content type must be usable as an image."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "setPhotoWithAttributes",
      "signature": "public static ConnectApi.Photo setPhotoWithAttributes(String communityId, String groupId, ConnectApi.PhotoInput photo)",
      "description": "Set and crop an uploaded file as the group photo.",
      "params": [
        {
          "name": "photo",
          "datatype": "ConnectApi.PhotoInput",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. A ConnectApi.PhotoInput object that specifies the ID and version of the file, and how to crop the file."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "setPhotoWithAttributes",
      "signature": "public static ConnectApi.Photo setPhotoWithAttributes(String communityId, String groupId, ConnectApi.PhotoInput photo, ConnectApi.BinaryInput fileUpload)",
      "description": "Set and crop a file that hasn’t been uploaded as the group photo.",
      "params": [
        {
          "name": "fileUpload",
          "datatype": "ConnectApi.Binary​​Input",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. A ConnectApi.PhotoInput object that specifies how to crop the file specified in fileUpload. A file to use as the photo. The content type must be usable as an image."
        }
      ],
      "datatype": "ConnectApi.Photo"
    },
    {
      "name": "updateGroup",
      "signature": "public static ConnectApi.ChatterGroup updateGroup(String communityId, String groupId, ConnectApi.ChatterGroupInput groupInput)",
      "description": "Update the settings of a group.",
      "params": [
        {
          "name": "groupInput",
          "datatype": "ConnectApi.Chatter​​GroupInput",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. A ConnectApi.ChatterGroupInput object."
        }
      ],
      "datatype": "ConnectApi.ChatterGroup"
    },
    {
      "name": "updateGroupMember",
      "signature": "public static ConnectApi.ChatterGroup updateGroupMember(String communityId, String membershipId, ConnectApi.GroupMembershipType role)",
      "description": "Update the role of a group member.",
      "params": [
        {
          "name": "role",
          "datatype": "ConnectApi.GroupMembershipType",
          "description": "Use either the ID for a community, internal, or null. The ID for a membership. The group membership type. One of these values: GroupManager  StandardMember"
        }
      ],
      "datatype": "ConnectApi.ChatterGroup"
    },
    {
      "name": "updateMyChatterSettings",
      "signature": "public static ConnectApi.GroupChatterSettings updateMyChatterSettings(String communityId, String groupId, ConnectApi.GroupEmailFrequency emailFrequency)",
      "description": "Update the context user’s email frequency for a group.",
      "params": [
        {
          "name": "emailFrequency",
          "datatype": "ConnectApi.​GroupEmail​Frequency",
          "description": "Use either the ID for a community, internal, or null. The ID for a group. Frequency with which a user receives email. EachPost  DailyDigest  WeeklyDigest  Never  UseDefault   The value UseDefault uses the value set in a call to updateChatterSettings(communityId, userId, defaultGroupEmailFrequency)."
        }
      ],
      "datatype": "ConnectApi.Group​​ChatterSettings"
    },
    {
      "name": "updateRequestStatus",
      "signature": "public static ConnectApi.GroupMembershipRequest updateRequestStatus(String communityId, String requestId, ConnectApi.GroupMembershipRequestStatus status)",
      "description": "Update a request to join a private group.",
      "params": [
        {
          "name": "status",
          "datatype": "ConnectApi.​GroupMembership​RequestStatus",
          "description": "Use either the ID for a community, internal, or null. ID for a request to join a private group. Status of the request: Accepted  Declined   The Pending value of the enum is not valid in this method."
        }
      ],
      "datatype": "ConnectApi.​Group​Membership​Request"
    },
    {
      "name": "updateRequestStatus",
      "signature": "public static ConnectApi.GroupMembershipRequest updateRequestStatus(String communityId, String requestId, ConnectApi.GroupMembershipRequestStatus status, String responseMessage)",
      "description": "Update a request to join a private group and optionally provide a message when the request is denied.",
      "params": [
        {
          "name": "responseMessage",
          "datatype": "String",
          "description": "Use either the ID for a community, internal, or null. ID for a request to join a private group. Status of the request: Accepted  Declined   The Pending value of the enum is not valid in this method.  Provide a message to the user if their membership request is declined. The value of this property is used only when the value of the status property is Declined.The maximum length is 756 characters."
        }
      ],
      "datatype": "ConnectApi.​Group​Membership​Request"
    },
    {
      "name": "setTestSearchGroups",
      "signature": "public static Void setTestSearchGroups(String communityId, String q, ConnectApi.ChatterGroupPage result)",
      "description": "Register a ConnectApi.ChatterGroupPage object to be returned when the matching ConnectApi.searchGroups method is called in a test context. Use the test method with the same parameters or you receive an exception.",
      "params": [
        {
          "name": "result",
          "datatype": "ConnectApi.Chatter​​​GroupPage",
          "description": "Use either the ID for a community, internal, or null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards. Can be specified as null. The test ConnectApi.ChatterGroupPage object."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setTestSearchGroups",
      "signature": "public static Void setTestSearchGroups(String communityId, String q, Integer pageParam, Integer pageSize, ConnectApi.ChatterGroupPage result)",
      "description": "Register a ConnectApi.ChatterGroupPage object to be returned when the matching ConnectApi.searchGroups method is called in a test context. Use the test method with the same parameters or you receive an exception.",
      "params": [
        {
          "name": "result",
          "datatype": "ConnectApi.Chatter​​​GroupPage",
          "description": "Use either the ID for a community, internal, or null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards. Can be specified as null. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25. The test ConnectApi.ChatterGroupPage object."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setTestSearchGroups",
      "signature": "public static Void setTestSearchGroups(String communityId, String q, ConnectApi.GroupArchiveStatus, archiveStatus, Integer pageParam, Integer pageSize, ConnectApi.ChatterGroupPage result)",
      "description": "Register a ConnectApi.ChatterGroupPage object to be returned when the matching ConnectApi.searchGroups method is called in a test context. Use the test method with the same parameters or you receive an exception.",
      "params": [
        {
          "name": "result",
          "datatype": "ConnectApi.Chatter​​​GroupPage",
          "description": "Use either the ID for a community, internal, or null. Specifies the string to search. The search string must contain at least two characters, not including wildcards. See Wildcards. Can be specified as null. Archive status of groups.  All—All groups, including groups that are archived and groups that aren’t archived.   Archived—Groups that are archived.   NotArchived—Groups that aren’t archived.    Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 25. The test ConnectApi.ChatterGroupPage object."
        }
      ],
      "datatype": "Void"
    }
  ],
  "description": "Information about groups, such as the group’s members, photo, and the groups the specified user is a member of. Add members to a group, remove members, and change the group photo.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_ChatterGroups_static_methods.htm"
}