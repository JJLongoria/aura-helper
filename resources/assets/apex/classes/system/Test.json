{
  "name": "Test",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constuctors": [],
  "methods": [
    {
      "name": "clearApexPageMessages",
      "signature": "public static void clearApexPageMessages()",
      "description": "Clear the messages on a Visualforce page while executing Apex test methods.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "createStub",
      "signature": "public static Object createStub(System.Type parentType, System.StubProvider stubProvider)",
      "description": "Creates a stubbed version of an Apex class that you can use for testing. This method is part of the Apex stub API. You can use it with the System.StubProvider interface to create a mocking framework.",
      "methodParams": [
        {
          "name": "parentType",
          "datatype": "System.Type"
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "enableChangeDataCapture",
      "signature": "public static void enableChangeDataCapture()",
      "description": "Use this method in an Apex test so that change event notifications are generated for all supported Change Data Capture entities. Call this method at the beginning of your test before performing DML operations and calling Test.getEventBus().deliver();.",
      "methodParams": [],
      "datatype": "void"
    },
    {
      "name": "enqueueBatchJobs",
      "signature": "public static List<Id> enqueueBatchJobs(Integer numberOfJobs)",
      "description": "Adds the specified number of jobs with no-operation contents to the test-context queue. It first fills the test batch queue, up to the maximum 5 jobs, and then places jobs in the test flex queue. It throws a limit exception when the number of jobs in the test flex queue exceeds the allowed limit of 100 jobs.",
      "methodParams": [
        {
          "name": "numberOfJobs",
          "datatype": "Integer"
        }
      ],
      "datatype": "List<Id>"
    },
    {
      "name": "getEventBus",
      "signature": "public static EventBus.TestBroker getEventBus()",
      "description": "Returns an instance of the test event bus broker, which lets you operate on platform event or change event messages in an Apex test. For example, you can call Test.getEventBus().deliver() to deliver event messages.",
      "methodParams": [],
      "datatype": "EventBus.TestBroker"
    },
    {
      "name": "getFlexQueueOrder",
      "signature": "public static List<Id> getFlexQueueOrder()",
      "description": "Returns an ordered list of job IDs for jobs in the test-context flex queue. The job at index 0 is the next job slated to run. This method returns only test-context results, even if itâ€™s annotated with @IsTest(SeeAllData=true).",
      "methodParams": [],
      "datatype": "List<Id>"
    },
    {
      "name": "getStandardPricebookId",
      "signature": "public static Id getStandardPricebookId()",
      "description": "Returns the ID of the standard price book in the organization.",
      "methodParams": [],
      "datatype": "Id"
    },
    {
      "name": "invokeContinuationMethod",
      "signature": "public static Object invokeContinuationMethod(Object controller, Continuation request)",
      "description": "Invokes the callback method for the specified controller and continuation in a test method.",
      "methodParams": [
        {
          "name": "controller",
          "datatype": "Object"
        },
        {
          "name": "request",
          "datatype": "Continuation"
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "isRunningTest",
      "signature": "public static Boolean isRunningTest()",
      "description": "Returns true if the currently executing code was called by code contained in a test method, false otherwise. Use this method if you need to run different code depending on whether it was being called  from a test.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "loadData",
      "signature": "public static List<sObject> loadData(Schema.SObjectType sObjectToken, String resourceName)",
      "description": "Inserts test records from the specified static resource .csv file and for the specified sObject type, and returns a list of the inserted sObjects.",
      "methodParams": [
        {
          "name": "sObjectToken",
          "datatype": "Schema.SObjectType"
        },
        {
          "name": "resourceName",
          "datatype": "String"
        }
      ],
      "datatype": "List<sObject>"
    },
    {
      "name": "newSendEmailQuickActionDefaults",
      "signature": "public static QuickAction.SendEmailQuickActionDefaults newSendEmailQuickActionDefaults(ID contextId, ID replyToId)",
      "description": "Creates a new QuickAction.SendEmailQuickActionDefaults instance for testing a class implementing the QuickAction.QuickActionDefaultsHandler interface.",
      "methodParams": [
        {
          "name": "contextId",
          "datatype": "Id"
        },
        {
          "name": "replyToId",
          "datatype": "Id"
        }
      ],
      "datatype": "SendEmailQuickActionDefaults Class"
    },
    {
      "name": "setContinuationResponse",
      "signature": "public static void setContinuationResponse(String requestLabel, System.HttpResponse mockResponse)",
      "description": "Sets a mock response for a continuation HTTP request in a test method.",
      "methodParams": [
        {
          "name": "requestLabel",
          "datatype": "String"
        },
        {
          "name": "mockResponse",
          "datatype": "HttpResponse"
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setCreatedDate",
      "signature": "public static void setCreatedDate(Id recordId, Datetime createdDatetime)",
      "description": "Sets CreatedDate for a test-context sObject.",
      "methodParams": [
        {
          "name": "recordId",
          "datatype": "Id"
        },
        {
          "name": "createdDatetime",
          "datatype": "Datetime"
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setCurrentPage",
      "signature": "public static Void setCurrentPage(PageReference page)",
      "description": "A Visualforce test method that sets the current PageReference for the controller.",
      "methodParams": [
        {
          "name": "page",
          "datatype": "System.PageReference"
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setCurrentPageReference",
      "signature": "public static Void setCurrentPageReference(PageReference page)",
      "description": "A Visualforce test method that sets the current PageReference for the controller.",
      "methodParams": [
        {
          "name": "page",
          "datatype": "System.PageReference"
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setFixedSearchResults",
      "signature": "public static Void setFixedSearchResults(ID[] fixedSearchResults)",
      "description": "Defines a list of fixed search results to be returned by all subsequent SOSL statements in a test method.",
      "methodParams": [
        {
          "name": "fixedSearchResults",
          "datatype": "ID[]"
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setMock",
      "signature": "public static Void setMock(Type interfaceType, Object instance)",
      "description": "Sets the response mock mode and instructs the Apex runtime to send a mock response whenever a callout is made through the HTTP classes or the auto-generated code from WSDLs.",
      "methodParams": [
        {
          "name": "interfaceType",
          "datatype": "System.Type"
        },
        {
          "name": "instance",
          "datatype": "Object"
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setReadOnlyApplicationMode",
      "signature": "public static Void setReadOnlyApplicationMode(Boolean applicationMode)",
      "description": "Sets the application mode for an organization to read-only in an Apex test to simulate read-only mode during Salesforce upgrades and downtimes. The application mode is reset to the default mode at the end of each Apex test run.",
      "methodParams": [
        {
          "name": "applicationMode",
          "datatype": "Boolean"
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "startTest",
      "signature": "public static Void startTest()",
      "description": "Marks the point in your test code when your test actually begins.  Use this method when you are testing governor limits.",
      "methodParams": [],
      "datatype": "Void"
    },
    {
      "name": "stopTest",
      "signature": "public static Void stopTest()",
      "description": "Marks the point in your test code when your test ends. Use this method in conjunction with the startTest method.",
      "methodParams": [],
      "datatype": "Void"
    },
    {
      "name": "testInstall",
      "signature": "public static Void testInstall(InstallHandler installImplementation, Version version, Boolean isPush)",
      "description": "Tests the implementation of the InstallHandler interface, which is used for specifying a post install script in packages. Tests run as the test initiator in the development environment.",
      "methodParams": [
        {
          "name": "installImplementation",
          "datatype": "System.InstallHandler"
        },
        {
          "name": "version",
          "datatype": "System.Version"
        },
        {
          "name": "isPush",
          "datatype": "Boolean"
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "testUninstall",
      "signature": "public static Void testUninstall(UninstallHandler uninstallImplementation)",
      "description": "Tests the implementation of the UninstallHandler interface, which is used for specifying an uninstall script in packages. Tests run as the test initiator in the development environment.",
      "methodParams": [
        {
          "name": "uninstallImplementation",
          "datatype": "System.UninstallHandler"
        }
      ],
      "datatype": "Void"
    }
  ],
  "description": "Contains methods related to Apex tests.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_test.htm#apex_methods_system_test"
}