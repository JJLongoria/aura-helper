{
  "name": "BusinessHours",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constuctors": [],
  "methods": [
    {
      "name": "add",
      "signature": "public static Datetime add(String businessHoursId, Datetime startDate, Long intervalMilliseconds)",
      "description": "Adds an interval of time from a start Datetime traversing business hours only. Returns the result Datetime in the local time zone.",
      "methodParams": [
        {
          "name": "businessHoursId",
          "datatype": "String"
        },
        {
          "name": "startDate",
          "datatype": "Datetime"
        },
        {
          "name": "intervalMilliseconds",
          "datatype": "Long"
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "addGmt",
      "signature": "public static Datetime addGmt(String businessHoursId, Datetime startDate, Long intervalMilliseconds)",
      "description": "Adds an interval of milliseconds from a start Datetime traversing business hours only. Returns the result Datetime in GMT.",
      "methodParams": [
        {
          "name": "businessHoursId",
          "datatype": "String"
        },
        {
          "name": "startDate",
          "datatype": "Datetime"
        },
        {
          "name": "intervalMilliseconds",
          "datatype": "Long"
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "diff",
      "signature": "public static Long diff(String businessHoursId, Datetime startDate, Datetime endDate)",
      "description": "Returns the difference in milliseconds between a start and end Datetime based on a specific set of business hours.",
      "methodParams": [
        {
          "name": "businessHoursId",
          "datatype": "String"
        },
        {
          "name": "startDate",
          "datatype": "Datetime"
        },
        {
          "name": "endDate",
          "datatype": "Datetime"
        }
      ],
      "datatype": "Long"
    },
    {
      "name": "isWithin",
      "signature": "public static Boolean isWithin(String businessHoursId, Datetime targetDate)",
      "description": "Returns true if the specified target date occurs within business hours. Holidays are included in the calculation.",
      "methodParams": [
        {
          "name": "businessHoursId",
          "datatype": "String"
        },
        {
          "name": "targetDate",
          "datatype": "Datetime"
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "nextStartDate",
      "signature": "public static Datetime nextStartDate(String businessHoursId, Datetime targetDate)",
      "description": "Starting from the specified target date, returns the next date when business hours are open. If the specified target date falls within business hours, this target date is returned.",
      "methodParams": [
        {
          "name": "businessHoursId",
          "datatype": "String"
        },
        {
          "name": "targetDate",
          "datatype": "Datetime"
        }
      ],
      "datatype": "Datetime"
    }
  ],
  "description": "Use the BusinessHours methods to set the business hours at which your customer support",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_businesshours.htm"
}