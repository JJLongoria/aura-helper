{
  "name": "List",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [
    {
      "name": "List&lt;T&gt;",
      "signature": "public List<T>()",
      "description": "Creates a new instance of the List class. A list can hold elements of any data type T.",
      "params": [],
      "datatype": "void"
    },
    {
      "name": "List&lt;T&gt;",
      "signature": "public List<T>(List<T> listToCopy)",
      "description": "Creates a new instance of the List class by copying the elements from the specified list. T is the data type of the elements in both lists and can be any data type.",
      "params": [
        {
          "name": "listToCopy",
          "datatype": "List<T>",
          "description": "The list containing the elements to initialize this list from. T is the data type of the list elements."
        }
      ],
      "datatype": "void"
    },
    {
      "name": "List&lt;T&gt;",
      "signature": "public List<T>(Set<T> setToCopy)",
      "description": "Creates a new instance of the List class by copying the elements from the specified set. T is the data type of the elements in the set and list and can be any data type.",
      "params": [
        {
          "name": "setToCopy",
          "datatype": "Set<T>",
          "description": "The set containing the elements to initialize this list with. T is the data type of the set elements."
        }
      ],
      "datatype": "void"
    }
  ],
  "methods": [
    {
      "name": "add",
      "signature": "public Void add(Object listElement)",
      "description": "Adds an element to the end of the list.",
      "params": [
        {
          "name": "listElement",
          "datatype": "Object",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "add",
      "signature": "public Void add(Integer index, Object listElement)",
      "description": "Inserts an element into the list at the specified index position.",
      "params": [
        {
          "name": "listElement",
          "datatype": "Object",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "addAll",
      "signature": "public Void addAll(List fromList)",
      "description": "Adds all of the elements in the specified list to the list that calls the method. Both lists must be of the same type.",
      "params": [
        {
          "name": "fromList",
          "datatype": "List",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "addAll",
      "signature": "public Void addAll(Set fromSet)",
      "description": "Add all of the elements in specified set to the  list that calls the method. The set and the list must be of the same type.",
      "params": [
        {
          "name": "fromSet",
          "datatype": "Set",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "clear",
      "signature": "public Void clear()",
      "description": "Removes all elements from a list, consequently setting the  list's length to zero.",
      "params": [],
      "datatype": "Void"
    },
    {
      "name": "clone",
      "signature": "public List<Object> clone()",
      "description": "Makes a duplicate copy of a list.",
      "params": [],
      "datatype": "List<Object>"
    },
    {
      "name": "contains",
      "signature": "public Boolean contains(Object listElement)",
      "description": "Returns true if the list contains the specified element.",
      "params": [
        {
          "name": "listElement",
          "datatype": "Object",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "deepClone",
      "signature": "public List<Object> deepClone(Boolean preserveId, Boolean preserveReadonlyTimestamps, Boolean preserveAutonumber)",
      "description": "Makes a duplicate copy of a list of sObject records, including the sObject records themselves.",
      "params": [
        {
          "name": "preserveAutonumber",
          "datatype": "Boolean",
          "description": "The optional preserveId argument determines whether the IDs of the original objects are preserved or cleared in the duplicates. If set to true, the IDs are copied to the cloned objects. The default is false, that is, the IDs are cleared. The optional preserveReadonlyTimestamps argument determines whether the read-only timestamp and user ID fields are preserved or cleared in the duplicates. If set to true, the read-only fields CreatedById, CreatedDate, LastModifiedById, and LastModifiedDate are copied to the cloned objects. The default is false, that is, the values are cleared. The optional preserveAutonumber argument determines whether the autonumber fields of the original objects are preserved or cleared in the duplicates. If set to true, auto number fields are copied to the cloned objects. The default is false, that is, auto number fields are cleared."
        }
      ],
      "datatype": "List<Object>"
    },
    {
      "name": "equals",
      "signature": "public Boolean equals(List list2)",
      "description": "Compares this list with the specified list and returns true if both lists are equal; otherwise, returns false.",
      "params": [
        {
          "name": "list2",
          "datatype": "List",
          "description": "The list to compare this list with."
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "get",
      "signature": "public Object get(Integer index)",
      "description": "Returns the list element stored at the specified index.",
      "params": [
        {
          "name": "index",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "getSObjectType",
      "signature": "public Schema.SObjectType getSObjectType()",
      "description": "Returns the token of the sObject type that makes up a list of sObjects.",
      "params": [],
      "datatype": "Schema.SObjectType"
    },
    {
      "name": "hashCode",
      "signature": "public Integer hashCode()",
      "description": "Returns the hashcode corresponding to this list and its contents.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "indexOf",
      "signature": "public Integer indexOf(Object listElement)",
      "description": "Returns the index of the first occurrence of the specified element in this list. If this list does not contain the element, returns -1.",
      "params": [
        {
          "name": "listElement",
          "datatype": "Object",
          "description": ""
        }
      ],
      "datatype": "Integer"
    },
    {
      "name": "isEmpty",
      "signature": "public Boolean isEmpty()",
      "description": "Returns true if the list has zero elements.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "iterator",
      "signature": "public Iterator iterator()",
      "description": "Returns an instance of an iterator for this list.",
      "params": [],
      "datatype": "Iterator"
    },
    {
      "name": "remove",
      "signature": "public Object remove(Integer index)",
      "description": "Removes the list element stored at the specified index, returning the element that was removed.",
      "params": [
        {
          "name": "index",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Object"
    },
    {
      "name": "set",
      "signature": "public Void set(Integer index, Object listElement)",
      "description": "Sets the specified value for the element at the given index.",
      "params": [
        {
          "name": "listElement",
          "datatype": "Object",
          "description": "The index of the list element to set. The value of the list element to set."
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "size",
      "signature": "public Integer size()",
      "description": "Returns the number of elements in the list.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "sort",
      "signature": "public Void sort()",
      "description": "Sorts the items in the list in ascending order.",
      "params": [],
      "datatype": "Void"
    }
  ],
  "description": "Contains methods for the List collection type.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_list.htm"
}