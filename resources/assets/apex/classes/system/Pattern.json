{
  "name": "Pattern",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "compile",
      "signature": "public static Pattern compile(String regExp)",
      "description": "Compiles the regular expression into a Pattern object.",
      "params": [
        {
          "name": "regExp",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "System.Pattern"
    },
    {
      "name": "matcher",
      "signature": "public Matcher matcher(String regExp)",
      "description": "Creates a Matcher object that matches the input string regExp against this Pattern object.",
      "params": [
        {
          "name": "regExp",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Matcher"
    },
    {
      "name": "matches",
      "signature": "public static Boolean matches(String regExp, String stringtoMatch)",
      "description": "Compiles the regular expression regExp and tries to match it against the specified string. This method returns true if the specified string matches the regular expression, false otherwise.",
      "params": [
        {
          "name": "stringtoMatch",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "pattern",
      "signature": "public String pattern()",
      "description": "Returns the regular expression from which this Pattern object was compiled.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "quote",
      "signature": "public static String quote(String yourString)",
      "description": "Returns a string that can be used to create a pattern that matches the string yourString as if it were a literal pattern.",
      "params": [
        {
          "name": "yourString",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "split",
      "signature": "public String[] split(String regExp)",
      "description": "Returns a list that contains each substring of the String that matches this pattern.",
      "params": [
        {
          "name": "regExp",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String[]"
    },
    {
      "name": "split",
      "signature": "public String[] split(String regExp, Integer limit)",
      "description": "Returns a list that contains each substring of the String that is terminated either by the regular expression regExp that matches this pattern, or by the end of the String.",
      "params": [
        {
          "name": "limit",
          "datatype": "Integer",
          "description": "(Optional) Controls the number of times the pattern is applied and therefore affects the length of the list. If limit is greater than zero: The pattern is applied a maximum of (limit – 1) times.  The list’s length is no greater than limit.  The list’s last entry contains all input beyond the last matched delimiter.     If limit is non-positive, the pattern is applied as many times as possible, and the list can have any length.  If limit is zero, the pattern is applied as many times as possible, the list can have any length, and trailing empty strings are discarded."
        }
      ],
      "datatype": "String[]"
    }
  ],
  "description": "Represents a compiled representation of a regular expression.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_pattern_and_matcher_pattern_methods.htm"
}