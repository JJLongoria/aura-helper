{
  "name": "Date",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "addDays",
      "signature": "public Date addDays(Integer additionalDays)",
      "description": "Adds the specified number of additional days to a Date.",
      "params": [
        {
          "name": "additionalDays",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "addMonths",
      "signature": "public Date addMonths(Integer additionalMonths)",
      "description": "Adds the specified number of additional months to a Date",
      "params": [
        {
          "name": "additionalMonths",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "addYears",
      "signature": "public Date addYears(Integer additionalYears)",
      "description": "Adds the specified number of additional years to a Date",
      "params": [
        {
          "name": "additionalYears",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "day",
      "signature": "public Integer day()",
      "description": "Returns the day-of-month component of a Date.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "dayOfYear",
      "signature": "public Integer dayOfYear()",
      "description": "Returns the day-of-year component of a Date.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "daysBetween",
      "signature": "public Integer daysBetween(Date secondDate)",
      "description": "Returns the number of days between the Date that called the method and the specified date.",
      "params": [
        {
          "name": "secondDate",
          "datatype": "Date",
          "description": ""
        }
      ],
      "datatype": "Integer"
    },
    {
      "name": "daysInMonth",
      "signature": "public static Integer daysInMonth(Integer year, Integer month)",
      "description": "Returns the number of days in the month for the specified year and month (1=Jan).",
      "params": [
        {
          "name": "month",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Integer"
    },
    {
      "name": "format",
      "signature": "public String format()",
      "description": "Returns the Date as a string using the locale of the context user",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "isLeapYear",
      "signature": "public static Boolean isLeapYear(Integer year)",
      "description": "Returns true if the specified year is a leap year.",
      "params": [
        {
          "name": "year",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "isSameDay",
      "signature": "public Boolean isSameDay(Date dateToCompare)",
      "description": "Returns true if the Date that called the method is the same as the specified date.",
      "params": [
        {
          "name": "dateToCompare",
          "datatype": "Date",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "month",
      "signature": "public Integer month()",
      "description": "Returns the month component of a Date (1=Jan).",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "monthsBetween",
      "signature": "public Integer monthsBetween(Date secondDate)",
      "description": "Returns the number of months between the Date that called the method and the specified date, ignoring the difference in days.",
      "params": [
        {
          "name": "secondDate",
          "datatype": "Date",
          "description": ""
        }
      ],
      "datatype": "Integer"
    },
    {
      "name": "newInstance",
      "signature": "public static Date newInstance(Integer year, Integer month, Integer day)",
      "description": "Constructs a Date from Integer representations of the year, month (1=Jan), and day.",
      "params": [
        {
          "name": "day",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "parse",
      "signature": "public static Date parse(String stringDate)",
      "description": "Constructs a Date from a String. The format of the String depends on the local date format.",
      "params": [
        {
          "name": "stringDate",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "today",
      "signature": "public static Date today()",
      "description": "Returns the current date in the current user's time zone.",
      "params": [],
      "datatype": "Date"
    },
    {
      "name": "toStartOfMonth",
      "signature": "public Date toStartOfMonth()",
      "description": "Returns the first of the month for the Date that called the method.",
      "params": [],
      "datatype": "Date"
    },
    {
      "name": "toStartOfWeek",
      "signature": "public Date toStartOfWeek()",
      "description": "Returns the start of the week for the Date that called the method, depending on the context user's locale.",
      "params": [],
      "datatype": "Date"
    },
    {
      "name": "valueOf",
      "signature": "public static Date valueOf(String stringDate)",
      "description": "Returns a Date that contains the value of the specified String.",
      "params": [
        {
          "name": "stringDate",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "valueOf",
      "signature": "public static Date valueOf(Object fieldValue)",
      "description": "Converts the specified object to a Date. Use this method to convert a history tracking field value or an object that represents a Date value.",
      "params": [
        {
          "name": "fieldValue",
          "datatype": "Object",
          "description": ""
        }
      ],
      "datatype": "Date"
    },
    {
      "name": "year",
      "signature": "public Integer year()",
      "description": "Returns the year component of a Date",
      "params": [],
      "datatype": "Integer"
    }
  ],
  "description": "Contains methods for the Date primitive data type.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_date.htm"
}