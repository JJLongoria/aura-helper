{
  "name": "Datetime",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "addDays",
      "signature": "public Datetime addDays(Integer additionalDays)",
      "description": "Adds the specified number of days to a Datetime.",
      "params": [
        {
          "name": "additionalDays",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "addHours",
      "signature": "public Datetime addHours(Integer additionalHours)",
      "description": "Adds the specified number of hours to a Datetime.",
      "params": [
        {
          "name": "additionalHours",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "addMinutes",
      "signature": "public Datetime addMinutes(Integer additionalMinutes)",
      "description": "Adds the specified number of minutes to a Datetime.",
      "params": [
        {
          "name": "additionalMinutes",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "addMonths",
      "signature": "public Datetime addMonths(Integer additionalMonths)",
      "description": "Adds the specified number of months to a Datetime.",
      "params": [
        {
          "name": "additionalMonths",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "addSeconds",
      "signature": "public Datetime addSeconds(Integer additionalSeconds)",
      "description": "Adds the specified number of seconds to a Datetime.",
      "params": [
        {
          "name": "additionalSeconds",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "addYears",
      "signature": "public Datetime addYears(Integer additionalYears)",
      "description": "Adds the specified number of years to a Datetime.",
      "params": [
        {
          "name": "additionalYears",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "date",
      "signature": "public Date date()",
      "description": "Returns the Date component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Date"
    },
    {
      "name": "dateGMT",
      "signature": "public Date dateGMT()",
      "description": "Return the Date component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Date"
    },
    {
      "name": "day",
      "signature": "public Integer day()",
      "description": "Returns the day-of-month component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "dayGmt",
      "signature": "public Integer dayGmt()",
      "description": "Returns the day-of-month component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "dayOfYear",
      "signature": "public Integer dayOfYear()",
      "description": "Returns the day-of-year component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "dayOfYearGmt",
      "signature": "public Integer dayOfYearGmt()",
      "description": "Returns the day-of-year component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "format",
      "signature": "public String format()",
      "description": "Converts the date to the local time zone and returns the converted date as a formatted string using the locale of the context user. If the time zone cannot be determined, GMT is used.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "format",
      "signature": "public String format(String dateFormatString)",
      "description": "Converts the date to the local time zone and returns the converted date as a string using the supplied Java simple date format. If the time zone cannot be determined, GMT is used.",
      "params": [
        {
          "name": "dateFormatString",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "format",
      "signature": "public String format(String dateFormatString, String timezone)",
      "description": "Converts the date to the specified time zone and returns the converted date as a string using the supplied Java simple date format. If the supplied time zone is not in the correct format, GMT is used.",
      "params": [
        {
          "name": "timezone",
          "datatype": "String",
          "description": "Valid time zone values for the timezone argument are the time zones of the Java TimeZone class that correspond to the time zones returned by the TimeZone.getAvailableIDs method in Java. We recommend you use full time zone names, not the three-letter abbreviations."
        }
      ],
      "datatype": "String"
    },
    {
      "name": "formatGmt",
      "signature": "public String formatGmt(String dateFormatString)",
      "description": "Returns a Datetime as a string using the supplied Java simple date format and the GMT time zone.",
      "params": [
        {
          "name": "dateFormatString",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "String"
    },
    {
      "name": "formatLong",
      "signature": "public String formatLong()",
      "description": "Converts the date to the local time zone and returns the converted date in long date format.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getTime",
      "signature": "public Long getTime()",
      "description": "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this DateTime object.",
      "params": [],
      "datatype": "Long"
    },
    {
      "name": "hour",
      "signature": "public Integer hour()",
      "description": "Returns the hour component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "hourGmt",
      "signature": "public Integer hourGmt()",
      "description": "Returns the hour component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "isSameDay",
      "signature": "public Boolean isSameDay(Datetime dateToCompare)",
      "description": "Returns true if the Datetime that called the method is the same as the specified Datetime in the local time zone of the context user.",
      "params": [
        {
          "name": "dateToCompare",
          "datatype": "Datetime",
          "description": ""
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "millisecond",
      "signature": "public Integer millisecond()",
      "description": "Return the millisecond component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "millisecondGmt",
      "signature": "public Integer millisecondGmt()",
      "description": "Return the millisecond component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "minute",
      "signature": "public Integer minute()",
      "description": "Returns the minute component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "minuteGmt",
      "signature": "public Integer minuteGmt()",
      "description": "Returns the minute component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "month",
      "signature": "public Integer month()",
      "description": "Returns the month component of a Datetime in the local time zone of the context user (1=Jan).",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "monthGmt",
      "signature": "public Integer monthGmt()",
      "description": "Returns the month component of a Datetime in the GMT time zone (1=Jan).",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "newInstance",
      "signature": "public static Datetime newInstance(Long milliseconds)",
      "description": "Constructs a Datetime and initializes it to represent the specified number of milliseconds since January 1, 1970, 00:00:00 GMT.",
      "params": [
        {
          "name": "milliseconds",
          "datatype": "Long",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "newInstance",
      "signature": "public static Datetime newInstance(Date date, Time time)",
      "description": "Constructs a DateTime from the specified date and time in the local time zone.",
      "params": [
        {
          "name": "time",
          "datatype": "Time",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "newInstance",
      "signature": "public static Datetime newInstance(Integer year, Integer month, Integer day)",
      "description": "Constructs a Datetime from Integer representations of the specified year, month (1=Jan), and day at midnight in the local time zone.",
      "params": [
        {
          "name": "day",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "newInstance",
      "signature": "public static Datetime newInstance(Integer year, Integer month, Integer day, Integer hour, Integer minute, Integer second)",
      "description": "Constructs a Datetime from Integer representations of the specified year, month (1=Jan), day, hour, minute, and second in the local time zone.",
      "params": [
        {
          "name": "second",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "newInstanceGmt",
      "signature": "public static Datetime newInstanceGmt(Date date, Time time)",
      "description": "Constructs a DateTime from the specified date and time in the GMT time zone.",
      "params": [
        {
          "name": "time",
          "datatype": "Time",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "newInstanceGmt",
      "signature": "public static Datetime newInstanceGmt(Integer year, Integer month, Integer date)",
      "description": "Constructs a Datetime from Integer representations of the specified year, month (1=Jan), and day at midnight in the GMT time zone",
      "params": [
        {
          "name": "date",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "newInstanceGmt",
      "signature": "public static Datetime newInstanceGmt(Integer year, Integer month, Integer date, Integer hour, Integer minute, Integer second)",
      "description": "Constructs a Datetime from Integer representations of the specified year, month (1=Jan), day, hour, minute, and second in the GMT time zone",
      "params": [
        {
          "name": "second",
          "datatype": "Integer",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "now",
      "signature": "public static Datetime now()",
      "description": "Returns the current Datetime based on a GMT calendar.",
      "params": [],
      "datatype": "Datetime"
    },
    {
      "name": "parse",
      "signature": "public static Datetime parse(String datetimeString)",
      "description": "Constructs a Datetime from the given String in the local time zone and in the format of the user locale.",
      "params": [
        {
          "name": "datetimeString",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "second",
      "signature": "public Integer second()",
      "description": "Returns the second component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "secondGmt",
      "signature": "public Integer secondGmt()",
      "description": "Returns the second component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "time",
      "signature": "public Time time()",
      "description": "Returns the time component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Time"
    },
    {
      "name": "timeGmt",
      "signature": "public Time timeGmt()",
      "description": "Returns the time component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Time"
    },
    {
      "name": "valueOf",
      "signature": "public static Datetime valueOf(String dateTimeString)",
      "description": "Returns a Datetime that contains the value of the specified string.",
      "params": [
        {
          "name": "dateTimeString",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "valueOf",
      "signature": "public static Datetime valueOf(Object fieldValue)",
      "description": "Converts the specified object to a Datetime. Use this method to convert a history tracking field value or an object that represents a Datetime value.",
      "params": [
        {
          "name": "fieldValue",
          "datatype": "Object",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "valueOfGmt",
      "signature": "public static Datetime valueOfGmt(String dateTimeString)",
      "description": "Returns a Datetime that contains the value of the specified String.",
      "params": [
        {
          "name": "dateTimeString",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Datetime"
    },
    {
      "name": "year",
      "signature": "public Integer year()",
      "description": "Returns the year component of a Datetime in the local time zone of the context user.",
      "params": [],
      "datatype": "Integer"
    },
    {
      "name": "yearGmt",
      "signature": "public Integer yearGmt()",
      "description": "Returns the year component of a Datetime in the GMT time zone.",
      "params": [],
      "datatype": "Integer"
    }
  ],
  "description": "Contains methods for the Datetime primitive data type.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_datetime.htm"
}