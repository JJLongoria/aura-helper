{
  "name": "Matcher",
  "namespace": "System",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constuctors": [],
  "methods": [
    {
      "name": "end",
      "signature": "public Integer end()",
      "description": "Returns the position after the last matched character.",
      "methodParams": [],
      "datatype": "Integer"
    },
    {
      "name": "end",
      "signature": "public Integer end(Integer groupIndex)",
      "description": "Returns the position after the last character of the subsequence captured by the group index during the previous match operation. If the match was successful but the group itself did not match anything, this method returns -1.",
      "methodParams": [
        {
          "name": "groupIndex",
          "datatype": "Integer"
        }
      ],
      "datatype": "Integer"
    },
    {
      "name": "find",
      "signature": "public Boolean find()",
      "description": "Attempts to find the next subsequence of the input sequence that matches the pattern. This method returns true if a subsequence of the input sequence matches this Matcher object's pattern.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "find",
      "signature": "public Boolean find(Integer group)",
      "description": "Resets the Matcher object and then tries to find the next subsequence of the input sequence that matches the pattern. This method returns true if a subsequence of the input sequence matches this Matcher object's pattern.",
      "methodParams": [
        {
          "name": "group",
          "datatype": "Integer"
        }
      ],
      "datatype": "Boolean"
    },
    {
      "name": "group",
      "signature": "public String group()",
      "description": "Returns the input subsequence returned by the previous match.",
      "methodParams": [],
      "datatype": "String"
    },
    {
      "name": "group",
      "signature": "public String group(Integer groupIndex)",
      "description": "Returns the input subsequence captured by the specified group index during the previous match operation. If the match was successful but the specified group failed to match any part of the input sequence, null is returned.",
      "methodParams": [
        {
          "name": "groupIndex",
          "datatype": "Integer"
        }
      ],
      "datatype": "String"
    },
    {
      "name": "groupCount",
      "signature": "public Integer groupCount()",
      "description": "Returns the number of capturing groups in this Matching object's pattern. Group zero denotes the entire pattern and is not included in this count.",
      "methodParams": [],
      "datatype": "Integer"
    },
    {
      "name": "hasAnchoringBounds",
      "signature": "public Boolean hasAnchoringBounds()",
      "description": "Returns true if the Matcher object has anchoring bounds, false otherwise. By default, a Matcher object uses anchoring bounds regions.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "hasTransparentBounds",
      "signature": "public Boolean hasTransparentBounds()",
      "description": "Returns true if the Matcher object has transparent bounds, false if it uses opaque bounds. By default, a Matcher object uses opaque region boundaries.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "hitEnd",
      "signature": "public Boolean hitEnd()",
      "description": "Returns true if the end of input was found by the search engine in the last match operation performed by this Matcher object. When this method returns true, it is possible that more input would have changed the result of the last search.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "lookingAt",
      "signature": "public Boolean lookingAt()",
      "description": "Attempts to match the input sequence, starting at the beginning of the region, against the pattern.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "matches",
      "signature": "public Boolean matches()",
      "description": "Attempts to match the entire region against the pattern.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "pattern",
      "signature": "public Pattern object pattern()",
      "description": "Returns the Pattern object from which this Matcher object was created.",
      "methodParams": [],
      "datatype": "System.Pattern"
    },
    {
      "name": "quoteReplacement",
      "signature": "public static String quoteReplacement(String inputString)",
      "description": "Returns a literal replacement string for the specified string inputString. The characters in the returned string match the sequence of characters in inputString.",
      "methodParams": [
        {
          "name": "inputString",
          "datatype": "String"
        }
      ],
      "datatype": "String"
    },
    {
      "name": "region",
      "signature": "public Matcher object region(Integer start, Integer end)",
      "description": "Sets the limits of this Matcher object's region. The region is the part of the input sequence that is searched to find a match.",
      "methodParams": [
        {
          "name": "start",
          "datatype": "Integer"
        },
        {
          "name": "end",
          "datatype": "Integer"
        }
      ],
      "datatype": "Matcher"
    },
    {
      "name": "regionEnd",
      "signature": "public Integer regionEnd()",
      "description": "Returns the end index (exclusive) of this Matcher object's region.",
      "methodParams": [],
      "datatype": "Integer"
    },
    {
      "name": "regionStart",
      "signature": "public Integer regionStart()",
      "description": "Returns the start index (inclusive) of this Matcher object's region.",
      "methodParams": [],
      "datatype": "Integer"
    },
    {
      "name": "replaceAll",
      "signature": "public String replaceAll(String replacementString)",
      "description": "Replaces every subsequence of the input sequence that matches the pattern with the replacement string.",
      "methodParams": [
        {
          "name": "replacementString",
          "datatype": "String"
        }
      ],
      "datatype": "String"
    },
    {
      "name": "replaceFirst",
      "signature": "public String replaceFirst(String replacementString)",
      "description": "Replaces the first subsequence of the input sequence that matches the pattern with the replacement string.",
      "methodParams": [
        {
          "name": "replacementString",
          "datatype": "String"
        }
      ],
      "datatype": "String"
    },
    {
      "name": "requireEnd",
      "signature": "public Boolean requireEnd()",
      "description": "Returns true if more input could change a positive match into a negative one.",
      "methodParams": [],
      "datatype": "Boolean"
    },
    {
      "name": "reset",
      "signature": "public Matcher object reset()",
      "description": "Resets this Matcher object. Resetting a Matcher object discards all of its explicit state information.",
      "methodParams": [],
      "datatype": "Matcher"
    },
    {
      "name": "reset",
      "signature": "public Matcher reset(String inputSequence)",
      "description": "Resets this Matcher object with the new input sequence. Resetting a Matcher object discards all of its explicit state information.",
      "methodParams": [
        {
          "name": "inputSequence",
          "datatype": "String"
        }
      ],
      "datatype": "Matcher"
    },
    {
      "name": "start",
      "signature": "public Integer start()",
      "description": "Returns the start index of the first character of the previous match.",
      "methodParams": [],
      "datatype": "Integer"
    },
    {
      "name": "start",
      "signature": "public Integer start(Integer groupIndex)",
      "description": "Returns the start index of the subsequence captured by the group specified by the group index during the previous match operation. Captured groups are indexed from left to right, starting at one. Group zero denotes the entire pattern, so the expression m.start(0) is equivalent to m.start().",
      "methodParams": [
        {
          "name": "groupIndex",
          "datatype": "Integer"
        }
      ],
      "datatype": "Integer"
    },
    {
      "name": "useAnchoringBounds",
      "signature": "public Matcher object useAnchoringBounds(Boolean anchoringBounds)",
      "description": "Sets the anchoring bounds of the region for the Matcher object. By default, a Matcher object uses anchoring bounds regions.",
      "methodParams": [
        {
          "name": "anchoringBounds",
          "datatype": "Boolean"
        }
      ],
      "datatype": "Matcher"
    },
    {
      "name": "usePattern",
      "signature": "public Matcher object usePattern(Pattern pattern)",
      "description": "Changes the Pattern object that the Matcher object uses to find matches. This method causes the Matcher object to lose information about the groups of the last match that occurred. The Matcher object's position in the input is maintained.",
      "methodParams": [
        {
          "name": "pattern",
          "datatype": "System.Pattern"
        }
      ],
      "datatype": "Matcher"
    },
    {
      "name": "useTransparentBounds",
      "signature": "public Matcher object useTransparentBounds(Boolean transparentBounds)",
      "description": "Sets the transparency bounds for this Matcher object. By default, a Matcher object uses anchoring bounds regions.",
      "methodParams": [
        {
          "name": "transparentBounds",
          "datatype": "Boolean"
        }
      ],
      "datatype": "Matcher"
    }
  ],
  "description": "Matchers use Patterns to perform match operations on a",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_pattern_and_matcher_matcher_methods.htm#apex_classes_pattern_and_matcher_matcher_methods"
}