{
  "name": "ReportMetadata",
  "namespace": "Reports",
  "accessModifier": "global",
  "definitionModifier": "",
  "withSharing": false,
  "inheritedSharing": false,
  "isEnum": false,
  "enumValues": [],
  "extendsType": "",
  "isInterface": false,
  "implements": [],
  "classes": {},
  "enums": {},
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getAggregates",
      "signature": "",
      "description": "Returns unique identifiers for summary or custom summary formula fields in the report.",
      "params": [],
      "datatype": "List<String>"
    },
    {
      "name": "getBuckets",
      "signature": "public List<Reports.BucketField> getBuckets()",
      "description": "Returns a list of bucket fields in the report.",
      "params": [],
      "datatype": "List<Reports.BucketField>"
    },
    {
      "name": "getCrossFilters",
      "signature": "public Reports.CrossFilter getCrossFilters()",
      "description": "Returns information about cross filters applied to a report.",
      "params": [],
      "datatype": "List<Reports.CrossFilter>"
    },
    {
      "name": "getCurrencyCode",
      "signature": "",
      "description": "Returns report currency, such as USD, EUR, or GBP, for an organization that has multicurrency enabled. The value is null if the organization does not have multicurrency enabled.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getCustomSummaryFormula",
      "signature": "public Map<String,Reports.ReportCsf> getCustomSummaryFormula()",
      "description": "Returns information about custom summary formulas in a report.",
      "params": [],
      "datatype": "Map<String,Reports.ReportCsf>"
    },
    {
      "name": "getDescription",
      "signature": "public String getDescription()",
      "description": "Returns the description of the report.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getDetailColumns",
      "signature": "",
      "description": "Returns unique API names (column names) for the fields that contain detailed data. For example, the method might return the following values: “OPPORTUNITY_NAME, TYPE, LEAD_SOURCE, AMOUNT.”",
      "params": [],
      "datatype": "List<String>"
    },
    {
      "name": "getDeveloperName",
      "signature": "",
      "description": "Returns the report API name. For example, the method might return the following value: “Closed_Sales_This_Quarter.”",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getDivision",
      "signature": "Note Reports that use standard filters (such as My Cases or My Team’s Accounts) show records in all divisions. These reports can’t be further limited to a specific division.",
      "description": "Returns the division specified in the report.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getGroupingsAcross",
      "signature": "",
      "description": "Returns column groupings in a report.",
      "params": [],
      "datatype": "List<Reports.GroupingInfo>"
    },
    {
      "name": "getGroupingsDown",
      "signature": "",
      "description": "Returns row groupings for a report.",
      "params": [],
      "datatype": "List<Reports.GroupingInfo>"
    },
    {
      "name": "getHasDetailRows",
      "signature": "public Boolean getHasDetailRows()",
      "description": "Indicates whether the report has detail rows.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "getHasRecordCount",
      "signature": "public Boolean getHasRecordCount()",
      "description": "Indicates whether the report shows the total number of records.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "getHistoricalSnapshotDates",
      "signature": "",
      "description": "Returns a list of historical snapshot dates.",
      "params": [],
      "datatype": "List<String>"
    },
    {
      "name": "getId",
      "signature": "",
      "description": "Returns the unique report ID.",
      "params": [],
      "datatype": "Id"
    },
    {
      "name": "getName",
      "signature": "",
      "description": "Returns the report name.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getReportBooleanFilter",
      "signature": "",
      "description": "Returns logic to parse custom field filters. The value is null when filter logic is not specified.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getReportFilters",
      "signature": "",
      "description": "Returns a list of each custom filter in the report along with the field name, filter operator, and filter value.",
      "params": [],
      "datatype": "List<Reports.ReportFilter>"
    },
    {
      "name": "getReportFormat",
      "signature": "",
      "description": "Returns the format of the report.",
      "params": [],
      "datatype": "Reports.ReportFormat"
    },
    {
      "name": "getReportType",
      "signature": "",
      "description": "Returns the unique API name and display name for the report type.",
      "params": [],
      "datatype": "Reports.ReportType"
    },
    {
      "name": "getScope",
      "signature": "public String getScope()",
      "description": "Returns the API name for the scope defined for the report. Scope values depend on the report type.",
      "params": [],
      "datatype": "String"
    },
    {
      "name": "getShowGrandTotal",
      "signature": "public Boolean getShowGrandTotal()",
      "description": "Indicates whether the report shows the grand total.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "getShowSubtotals",
      "signature": "public Boolean getShowSubtotals()",
      "description": "Indicates whether the report shows subtotals, such as column or row totals.",
      "params": [],
      "datatype": "Boolean"
    },
    {
      "name": "getSortBy",
      "signature": "public List<Reports.SortColumn> getSortBy()",
      "description": "Returns the list of columns on which the report is sorted. Currently, you can sort on only one column.",
      "params": [],
      "datatype": "List<Reports.SortColumn>"
    },
    {
      "name": "getStandardDateFilter",
      "signature": "public Reports.StandardDateFilter getStandardDateFilter()",
      "description": "Returns information about the standard date filter for the report, such as the start date, end date, date range, and date field API name.",
      "params": [],
      "datatype": "Reports.StandardDateFilter"
    },
    {
      "name": "getStandardFilters",
      "signature": "public List<Reports.StandardFilter> getStandardFilters()",
      "description": "Returns a list of standard filters for the report.",
      "params": [],
      "datatype": "List<Reports.StandardFilter>"
    },
    {
      "name": "getTopRows",
      "signature": "public Reports.TopRows getTopRows()",
      "description": "Returns information about a row limit filter, including the number of rows returned and the sort order.",
      "params": [],
      "datatype": "Reports.TopRows"
    },
    {
      "name": "setAggregates",
      "signature": "public void setAggregates(List<String> aggregates)",
      "description": "Sets unique identifiers for standard or custom summary formula fields in the report.",
      "params": [
        {
          "name": "aggregates",
          "datatype": "List<String>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setBuckets",
      "signature": "public void setBuckets(List<Reports.BucketField> buckets)",
      "description": "Creates bucket fields in a report.",
      "params": [
        {
          "name": "buckets",
          "datatype": "List<Reports.BucketField>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setCrossFilters",
      "signature": "public void setCrossFilters(List<Reports.CrossFilter> crossFilters)",
      "description": "Applies cross filters to a report.",
      "params": [
        {
          "name": "crossFilter",
          "datatype": "List<Reports.CrossFilter>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setCurrencyCode",
      "signature": "public void setCurrencyCode(String currencyCode)",
      "description": "Sets the currency, such as USD, EUR, or GBP, for report summary fields in an organization that has multicurrency enabled.",
      "params": [
        {
          "name": "currencyCode",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setCustomSummaryFormula",
      "signature": "public void setCustomSummaryFormula(MAP<String,Reports.ReportCsf> customSummaryFormula)",
      "description": "Adds a custom summary formula to a report.",
      "params": [
        {
          "name": "customSummaryFormula",
          "datatype": "Map<String, Reports.ReportCsf>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setDescription",
      "signature": "public void setDescription(String description)",
      "description": "Sets the description of the report.",
      "params": [
        {
          "name": "description",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setDetailColumns",
      "signature": "public void setDetailColumns(List<String> detailColumns)",
      "description": "Sets the unique API names for the fields that contain detailed data—for example, OPPORTUNITY_NAME, TYPE, LEAD_SOURCE, or AMOUNT.",
      "params": [
        {
          "name": "detailColumns",
          "datatype": "List<String>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setDeveloperName",
      "signature": "public void setDeveloperName(String developerName)",
      "description": "Sets the report API name—for example, Closed_Sales_This_Quarter.",
      "params": [
        {
          "name": "developerName",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setDivision",
      "signature": "Note Reports that use standard filters (such as My Cases or My Team’s Accounts) show records in all divisions. These reports can’t be further limited to a specific division.",
      "description": "Sets the division of the report.",
      "params": [
        {
          "name": "division",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setGroupingsAcross",
      "signature": "public void setGroupingsAcross(List<Reports.GroupingInfo> groupingInfo)",
      "description": "Sets column groupings in a report.",
      "params": [
        {
          "name": "groupingInfo",
          "datatype": "List<Reports.GroupingInfo>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setGroupingsDown",
      "signature": "public void setGroupingsDown(List<Reports.GroupingInfo> groupingInfo)",
      "description": "Sets row groupings for a report.",
      "params": [
        {
          "name": "groupingInfo",
          "datatype": "List<Reports.GroupingInfo>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setHasDetailRows",
      "signature": "public void setHasDetailRows(Boolean hasDetailRows)",
      "description": "Specifies whether the report has detail rows.",
      "params": [
        {
          "name": "hasDetailRows",
          "datatype": "Boolean",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setHasRecordCount",
      "signature": "public void setHasRecordCount(Boolean hasRecordCount)",
      "description": "Specifies whether the report is configured to show the total number of records.",
      "params": [
        {
          "name": "hasRecordCount",
          "datatype": "Boolean",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setHistoricalSnapshotDates",
      "signature": "",
      "description": "Sets a list of historical snapshot dates.",
      "params": [
        {
          "name": "historicalSnapshot",
          "datatype": "List<String>",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setId",
      "signature": "public void setId(Id id)",
      "description": "Sets the unique report ID.",
      "params": [
        {
          "name": "id",
          "datatype": "Id",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setName",
      "signature": "public void setName(String name)",
      "description": "Sets the report name.",
      "params": [
        {
          "name": "name",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setReportBooleanFilter",
      "signature": "",
      "description": "Sets logic to parse custom field filters.",
      "params": [
        {
          "name": "reportBooleanFilter",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setReportFilters",
      "signature": "",
      "description": "Sets a list of each custom filter in the report along with the field name, filter operator, and filter value.",
      "params": [
        {
          "name": "reportFilters",
          "datatype": "List<Reports.ReportFilter>",
          "description": ""
        }
      ],
      "datatype": "Void"
    },
    {
      "name": "setReportFormat",
      "signature": "public void setReportFormat(Reports.ReportFormat format)",
      "description": "Sets the format of the report.",
      "params": [
        {
          "name": "format",
          "datatype": "Reports.ReportFormat",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setReportType",
      "signature": "public void setReportType(Reports.ReportType reportType)",
      "description": "Sets the unique API name and display name for the report type.",
      "params": [
        {
          "name": "reportType",
          "datatype": "Reports.ReportType",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setScope",
      "signature": "public void setScope(String scopeName)",
      "description": "Sets the API name for the scope defined for the report. Scope values depend on the report type.",
      "params": [
        {
          "name": "scopeName",
          "datatype": "String",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setShowGrandTotal",
      "signature": "public void setShowGrandTotal(Boolean showGrandTotal)",
      "description": "Specifies whether the report shows the grand total.",
      "params": [
        {
          "name": "showGrandTotal",
          "datatype": "Boolean",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setShowSubtotals",
      "signature": "public void setShowSubtotals(Boolean showSubtotals)",
      "description": "Specifies whether the report shows subtotals, such as column or row totals.",
      "params": [
        {
          "name": "showSubtotals",
          "datatype": "Boolean",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setSortBy",
      "signature": "public void setSortBy(List<Reports.SortColumn> column)",
      "description": "Sets the list of columns on which the report is sorted. Currently, you can only sort on one column.",
      "params": [
        {
          "name": "column",
          "datatype": "List<Reports.SortColumn>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setStandardDateFilter",
      "signature": "public void setStandardDateFilter(Reports.StandardDateFilter dateFilter)",
      "description": "Sets the standard date filter—which includes the start date, end date, date range, and date field API name—for the report.",
      "params": [
        {
          "name": "dateFilter",
          "datatype": "Reports.StandardDateFilter",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setStandardFilters",
      "signature": "public void setStandardFilters(List<Reports.StandardFilter> filters)",
      "description": "Sets one or more standard filters on the report.",
      "params": [
        {
          "name": "filters",
          "datatype": "List<Reports.StandardFilter>",
          "description": ""
        }
      ],
      "datatype": "void"
    },
    {
      "name": "setTopRows",
      "signature": "public Reports.TopRows setTopRows(Reports.TopRows topRows)",
      "description": "Applies a row limit filter to a report.",
      "params": [
        {
          "name": "topRows",
          "datatype": "Reports.TopRows",
          "description": ""
        }
      ],
      "datatype": "void"
    }
  ],
  "description": "Contains report metadata for a tabular, summary, or matrix report.",
  "docLink": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_reports_reportmetadata.htm"
}